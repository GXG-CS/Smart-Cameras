_abc_impl: <_abc._abc_data object at 0x146650ec0>
_backprop: <bound method BaseMultilayerPerceptron._backprop of MLPRegressor()>
_build_request_for_signature: <bound method _MetadataRequester._build_request_for_signature of <class 'sklearn.neural_network._multilayer_perceptron.MLPRegressor'>>
_check_feature_names: <bound method BaseEstimator._check_feature_names of MLPRegressor()>
_check_n_features: <bound method BaseEstimator._check_n_features of MLPRegressor()>
_check_solver: <bound method BaseMultilayerPerceptron._check_solver of MLPRegressor()>
_compute_loss_grad: <bound method BaseMultilayerPerceptron._compute_loss_grad of MLPRegressor()>
_estimator_type: regressor
_fit: <bound method BaseMultilayerPerceptron._fit of MLPRegressor()>
_fit_lbfgs: <bound method BaseMultilayerPerceptron._fit_lbfgs of MLPRegressor()>
_fit_stochastic: <bound method BaseMultilayerPerceptron._fit_stochastic of MLPRegressor()>
_forward_pass: <bound method BaseMultilayerPerceptron._forward_pass of MLPRegressor()>
_forward_pass_fast: <bound method BaseMultilayerPerceptron._forward_pass_fast of MLPRegressor()>
_get_default_requests: <bound method _MetadataRequester._get_default_requests of <class 'sklearn.neural_network._multilayer_perceptron.MLPRegressor'>>
_get_metadata_request: <bound method _MetadataRequester._get_metadata_request of MLPRegressor()>
_get_param_names: <bound method BaseEstimator._get_param_names of <class 'sklearn.neural_network._multilayer_perceptron.MLPRegressor'>>
_get_tags: <bound method BaseEstimator._get_tags of MLPRegressor()>
_init_coef: <bound method BaseMultilayerPerceptron._init_coef of MLPRegressor()>
_initialize: <bound method BaseMultilayerPerceptron._initialize of MLPRegressor()>
_loss_grad_lbfgs: <bound method BaseMultilayerPerceptron._loss_grad_lbfgs of MLPRegressor()>
_more_tags: <bound method RegressorMixin._more_tags of MLPRegressor()>
_no_improvement_count: 11
_optimizer: <sklearn.neural_network._stochastic_optimizers.AdamOptimizer object at 0x14665e340>
_parameter_constraints: {'hidden_layer_sizes': ['array-like', <sklearn.utils._param_validation.Interval object at 0x144aa7df0>], 'activation': [<sklearn.utils._param_validation.StrOptions object at 0x144aa7e20>], 'solver': [<sklearn.utils._param_validation.StrOptions object at 0x1466461f0>], 'alpha': [<sklearn.utils._param_validation.Interval object at 0x146646700>], 'batch_size': [<sklearn.utils._param_validation.StrOptions object at 0x146646730>, <sklearn.utils._param_validation.Interval object at 0x1466467c0>], 'learning_rate': [<sklearn.utils._param_validation.StrOptions object at 0x1466467f0>], 'learning_rate_init': [<sklearn.utils._param_validation.Interval object at 0x146646880>], 'power_t': [<sklearn.utils._param_validation.Interval object at 0x1466468b0>], 'max_iter': [<sklearn.utils._param_validation.Interval object at 0x146646910>], 'shuffle': ['boolean'], 'random_state': ['random_state'], 'tol': [<sklearn.utils._param_validation.Interval object at 0x146646970>], 'verbose': ['verbose'], 'warm_start': ['boolean'], 'momentum': [<sklearn.utils._param_validation.Interval object at 0x1466469d0>], 'nesterovs_momentum': ['boolean'], 'early_stopping': ['boolean'], 'validation_fraction': [<sklearn.utils._param_validation.Interval object at 0x146646a30>], 'beta_1': [<sklearn.utils._param_validation.Interval object at 0x146646a90>], 'beta_2': [<sklearn.utils._param_validation.Interval object at 0x146646af0>], 'epsilon': [<sklearn.utils._param_validation.Interval object at 0x146646b50>], 'n_iter_no_change': [<sklearn.utils._param_validation.Interval object at 0x146646bb0>, <sklearn.utils._param_validation.Options object at 0x146646c10>], 'max_fun': [<sklearn.utils._param_validation.Interval object at 0x146646ca0>]}
_predict: <bound method MLPRegressor._predict of MLPRegressor()>
_random_state: RandomState(MT19937)
_repr_html_: <bound method BaseEstimator._repr_html_inner of MLPRegressor()>
_repr_html_inner: <bound method BaseEstimator._repr_html_inner of MLPRegressor()>
_repr_mimebundle_: <bound method BaseEstimator._repr_mimebundle_ of MLPRegressor()>
_score: <bound method MLPRegressor._score of MLPRegressor()>
_unpack: <bound method BaseMultilayerPerceptron._unpack of MLPRegressor()>
_update_no_improvement_count: <bound method BaseMultilayerPerceptron._update_no_improvement_count of MLPRegressor()>
_validate_data: <bound method BaseEstimator._validate_data of MLPRegressor()>
_validate_input: <bound method MLPRegressor._validate_input of MLPRegressor()>
_validate_params: <bound method BaseEstimator._validate_params of MLPRegressor()>
activation: relu
alpha: 0.0001
batch_size: auto
best_loss_: 0.33633635167645876
best_validation_score_: None
beta_1: 0.9
beta_2: 0.999
coefs_: [array([[-1.11263585e-01,  4.93646089e-02,  5.79586034e-02,
         1.55741106e-01,  1.52422638e-01,  1.84714111e-01,
         2.02961275e-02, -6.79088741e-02,  1.85874309e-01,
        -6.13166511e-02, -9.89278906e-02,  2.04708513e-01,
        -6.70349266e-02, -2.23998783e-01,  1.69322552e-01,
        -6.03708123e-02,  1.84189945e-01, -1.40106357e-01,
        -2.13204833e-01, -4.24808630e-02,  7.02925587e-02,
         9.25730009e-02,  1.30831949e-01,  2.09413109e-01,
         2.14673215e-02,  2.24535778e-01, -2.02958459e-01,
         1.20600482e-01,  8.21633213e-03, -9.28158552e-02,
         2.16275683e-01,  3.11565184e-02,  1.64119404e-01,
        -1.42053892e-01, -8.62308959e-02,  1.82606110e-01,
        -9.53832496e-02,  1.67472772e-01, -4.05868687e-02,
         2.55231251e-02, -1.82815884e-01, -1.19970427e-01,
         5.73321504e-02, -1.61569823e-01, -1.61717113e-01,
        -4.34396295e-02,  2.25387435e-01, -7.03294884e-02,
        -3.31903387e-02, -2.60061356e-03,  2.07316132e-02,
         1.91790132e-01,  8.80325867e-02, -1.25091032e-01,
         1.65955117e-02, -1.25402759e-01,  3.25807423e-03,
        -4.47080784e-02, -4.44566387e-02,  2.10311836e-01,
        -5.89323429e-02,  1.22608379e-01,  2.70998970e-02,
         7.21556906e-02, -1.95577082e-01, -7.94571096e-03,
        -2.12785659e-01,  1.68478277e-02,  8.12943837e-02,
         6.88842592e-02,  6.23750494e-02, -1.95600373e-01,
         4.22203339e-02,  1.24955478e-01,  6.85314985e-02,
        -9.03714949e-02,  7.47248979e-02,  1.36521553e-02,
         2.25604551e-01, -1.74403760e-01, -2.26359843e-01,
         1.07792895e-01,  2.22627672e-01,  1.55499003e-01,
        -9.63058511e-02, -4.33791189e-02,  3.34837671e-02,
        -8.71071025e-02, -5.13261566e-02,  1.71859218e-01,
         8.68611811e-02,  2.23073126e-02, -1.71332289e-02,
         1.92059590e-02, -4.53493452e-02,  4.79372150e-02,
         2.14353431e-01, -4.26795065e-02, -1.57192383e-01,
        -2.00749584e-01],
       [-3.95710480e-02,  9.02522322e-02, -1.66054282e-01,
        -8.17560876e-02, -6.51577088e-02, -1.29791919e-01,
        -2.36234772e-01, -8.01846616e-02, -2.09210119e-01,
        -1.99519650e-01,  1.14891456e-01,  6.81326074e-02,
        -2.13739923e-01,  7.73316298e-02, -1.21459818e-01,
         2.20812297e-01, -8.97409787e-02, -1.81905716e-01,
        -5.63253606e-02,  1.88102732e-02,  1.24369836e-01,
        -4.87417563e-03,  1.31074766e-01,  9.58010186e-02,
        -2.11377950e-01, -2.11986548e-01,  1.95189143e-01,
         4.59450673e-02,  1.53046423e-01, -5.85856046e-02,
        -1.34170136e-01, -3.67487697e-02,  2.08690859e-01,
         1.53514371e-01, -1.21076343e-01,  6.53278263e-02,
        -7.97987960e-02,  1.98329538e-01,  2.17007914e-01,
         1.13895496e-01,  2.30309797e-02,  1.65928207e-02,
         5.00564174e-02, -1.77990872e-01, -1.62253995e-01,
         1.02455020e-01,  9.44181990e-02, -7.21436351e-02,
         2.47064017e-01,  3.74677786e-02,  4.74758501e-02,
         1.05129278e-01, -1.74771732e-01,  2.41145971e-02,
         1.55725896e-03, -9.04526517e-02,  1.58222220e-02,
        -1.80753752e-01,  1.54528924e-01, -1.63077504e-02,
        -1.89791758e-01, -3.15655262e-02, -2.71381788e-02,
        -2.20773071e-01,  2.01006241e-01, -1.60789561e-01,
        -4.07871074e-02, -1.92597153e-01,  2.47606773e-01,
         1.43910106e-01, -8.85630101e-02,  5.29646501e-02,
         2.46333735e-01, -1.29795808e-01, -5.35951019e-02,
         1.14623442e-02, -1.35486633e-01,  2.28716445e-02,
        -5.55455179e-02, -1.57089597e-01,  2.07131286e-01,
        -1.22744297e-01, -1.38248437e-02,  5.16650008e-02,
         1.79755625e-01,  1.66120990e-01, -1.36429873e-01,
        -1.11320521e-01,  4.86740350e-02, -1.09371868e-02,
         1.12500829e-01, -1.45480856e-01,  1.59702032e-01,
        -9.69332188e-02, -4.32987066e-03,  1.23428415e-01,
        -1.08158783e-01, -2.30009241e-01,  9.87921227e-02,
         2.37428376e-02],
       [-1.26109174e-01, -4.05588751e-02,  1.19518978e-01,
        -1.89771752e-01, -1.62559401e-01,  2.35923990e-02,
         5.58216782e-02,  7.86885549e-02,  1.45585901e-01,
        -2.87782439e-03,  1.40389360e-01,  1.06490879e-01,
         1.60294279e-01,  6.45197005e-02, -6.25668460e-04,
         4.36149853e-02,  8.68966968e-02,  8.41099072e-02,
         8.31347721e-02, -1.14395057e-01, -1.29090488e-01,
         2.08607969e-01, -1.38887322e-01, -2.91221847e-02,
         2.19857515e-01,  5.17435244e-02, -6.45563301e-02,
         1.04957129e-01,  2.15852837e-01,  7.02210330e-02,
        -1.70175390e-01, -1.93512670e-02, -6.22930785e-02,
        -1.59487751e-01, -7.39885445e-03, -1.65867748e-01,
         1.11843925e-01,  2.05307064e-01, -1.61588661e-01,
         2.09867319e-01, -8.90553584e-02,  9.51317483e-02,
         1.91174156e-01, -2.34177375e-02, -5.56677757e-02,
        -1.71051385e-01, -7.92822408e-02, -9.71607605e-02,
        -1.55540948e-01, -1.36929567e-01, -1.68813817e-01,
         8.88589575e-02, -1.78319031e-01,  1.21475277e-01,
         9.26794596e-02, -1.16475833e-02,  2.07229522e-01,
         3.78201598e-02, -4.35067116e-02,  3.80211787e-02,
         1.51810508e-01,  6.68414141e-02, -1.19649829e-01,
        -3.78616811e-02,  2.15123389e-01,  8.89031337e-02,
         4.47308281e-02,  1.78854786e-01,  1.79448545e-01,
        -3.10105874e-02,  1.73181840e-02, -1.32738706e-01,
         7.88556701e-02,  1.19463550e-02, -5.47043157e-02,
        -1.48784779e-01,  2.22547915e-01,  1.93326990e-01,
         1.68828306e-02,  1.83596067e-01,  1.79622149e-01,
         2.05628501e-01,  1.45614233e-01,  1.74353645e-01,
         6.91462483e-02, -7.20066288e-02,  3.66487206e-02,
         2.03905323e-01, -8.03466829e-02,  2.20209455e-01,
         7.16266130e-04,  2.00261630e-01, -2.10094893e-02,
        -1.37847719e-02,  5.42987867e-02, -2.15023293e-01,
        -3.12097443e-03,  1.84298781e-01,  2.09338714e-01,
        -1.45945700e-01],
       [-1.07035686e-01, -5.76052601e-02,  8.97834414e-02,
        -2.41160860e-01, -1.66590322e-01, -1.58777648e-02,
         1.48339918e-01, -1.12770513e-02, -4.51949085e-02,
         8.20791386e-02,  5.79015225e-02,  1.08855449e-01,
         1.91750402e-01,  8.39909501e-02, -1.68347047e-01,
        -8.30468537e-02, -1.05366633e-01,  1.89187641e-01,
        -1.30940667e-01, -1.61967559e-01, -1.47559947e-01,
        -1.97211826e-01, -1.96457316e-01, -7.69381105e-02,
         1.16756130e-01,  1.31404473e-02, -7.12506441e-02,
        -1.02052253e-01,  1.02552994e-01, -5.29155448e-02,
         1.43833737e-01, -2.67242581e-02, -1.29249157e-01,
        -3.02669741e-02,  1.35547886e-01, -1.22629464e-01,
        -1.21040705e-01,  2.03283671e-01,  1.77193093e-01,
         2.45526398e-01,  6.47561344e-02,  3.12157309e-02,
         1.19183858e-01,  1.81483645e-01,  6.30801358e-04,
        -1.72887829e-01,  6.07755732e-02, -8.36231406e-02,
         1.86679207e-01,  2.07145023e-01, -1.39987246e-01,
         3.35190547e-02,  5.51166227e-02,  2.38208660e-01,
         4.52303819e-02,  1.65483719e-01, -9.48994912e-02,
         1.45651793e-01,  1.29345673e-01, -1.08232361e-01,
        -1.22205725e-01, -3.31366762e-02,  1.79087592e-01,
         1.57521286e-01, -1.81440037e-01, -2.94575902e-02,
        -3.90468235e-02,  5.88267853e-02, -4.08516787e-02,
        -1.02532922e-01, -5.80141153e-02,  2.00371251e-01,
        -1.97403159e-01,  1.83374352e-01,  2.25926862e-01,
         1.13759895e-02, -1.15325261e-01, -8.77597507e-02,
         2.15790140e-01,  1.71207321e-01,  9.99786796e-02,
         9.63369013e-02,  3.68335314e-02, -1.43592194e-01,
        -1.62358826e-01,  2.16594736e-01, -2.19134814e-01,
         1.75530177e-01,  6.89090912e-02,  9.97648093e-02,
         2.11010809e-01,  8.89973840e-02, -1.91995617e-01,
        -8.24109338e-02, -1.76367955e-01, -1.75361026e-01,
        -2.07226739e-01,  2.00780224e-01,  1.03976278e-01,
        -1.19598887e-01],
       [ 1.68111403e-01, -1.98736842e-01, -8.76996603e-02,
         2.10830553e-01, -1.73249817e-01,  7.38080596e-02,
        -1.52373426e-01,  5.85922251e-02,  7.52194068e-02,
        -8.85216928e-02, -6.14782117e-02, -1.47540297e-01,
         1.46044026e-01,  2.10568032e-02,  2.64492086e-02,
        -9.68939244e-02, -1.85802083e-01, -4.76846659e-02,
         2.08463751e-01, -2.99398334e-02, -1.67383526e-01,
        -1.67560024e-01,  1.76073486e-02, -1.89787818e-01,
         6.40024608e-02,  1.58655241e-01,  1.39657504e-01,
         1.88271602e-01, -1.05854304e-02, -4.84820108e-02,
         1.92195460e-01, -1.01596878e-01, -3.08262795e-02,
         7.27852899e-02,  1.71199422e-02, -1.49701560e-01,
        -3.10659003e-02,  1.37955091e-01,  1.67303001e-01,
        -1.47245346e-01,  2.00654110e-01, -1.26676622e-01,
        -7.15513653e-02, -1.31372649e-01,  1.80054213e-01,
        -2.12722998e-01, -2.07205801e-02, -1.31631728e-01,
         1.19951549e-01,  1.50968307e-01, -3.54297794e-02,
         1.90339254e-01,  3.11779095e-02,  2.05618819e-02,
         1.79668999e-01, -1.90302788e-02,  2.51763832e-02,
         7.62651798e-02,  1.33731785e-01,  5.54849017e-02,
        -1.79788811e-01, -1.63328865e-01,  7.34469115e-02,
        -9.38106528e-02,  2.27771165e-01,  1.99348122e-01,
        -4.16695605e-02, -1.47364425e-01,  8.27081992e-02,
         1.66213312e-01, -2.31534581e-01,  1.54400158e-01,
         1.07161409e-02, -2.10141134e-01,  1.72613047e-02,
        -2.36929674e-02, -1.29314524e-01,  3.38035809e-02,
        -1.89141500e-01, -2.95410977e-02, -1.04038044e-01,
        -2.18093139e-01,  1.21928246e-01, -2.99353890e-02,
        -2.00493394e-01,  3.97080790e-02,  9.41514378e-02,
        -5.37072290e-02, -1.73383801e-01, -1.68280566e-01,
        -2.74948492e-02,  1.85230199e-01,  6.33751545e-02,
        -4.48582152e-02, -1.74546011e-01, -1.10292144e-01,
        -8.78786440e-02,  1.75666197e-01, -5.93101972e-02,
         1.53214318e-02],
       [-2.07588223e-02,  2.47515628e-01, -1.77838769e-01,
        -3.87186484e-02, -1.25011721e-01, -1.64699278e-01,
         4.78929940e-02, -2.99464525e-02, -1.40445497e-01,
        -1.37389560e-01,  3.00820290e-02, -2.09302260e-01,
         4.96461074e-02,  5.66543654e-02, -1.93546351e-01,
        -2.00903686e-01,  1.55749552e-01,  2.23277537e-01,
         9.75528226e-02, -1.91637093e-01,  1.74673967e-01,
        -1.46041169e-01,  1.64936147e-04, -1.31972756e-01,
        -4.49111345e-02,  5.25263190e-02,  9.54535605e-02,
         2.77306110e-02, -1.35598330e-02, -1.92955618e-01,
        -7.69876328e-02,  1.03759817e-01,  1.22397840e-02,
         2.02270122e-01, -1.15136107e-01, -1.81471817e-01,
        -3.97635469e-02, -9.37320308e-03, -9.72000091e-02,
         2.20469437e-01,  1.64553099e-01,  7.43367198e-02,
        -2.03858998e-01,  4.02373162e-02, -1.59556080e-01,
         4.14161920e-02, -1.64311023e-01,  3.35703132e-02,
         1.56644286e-01,  2.17601503e-01, -6.26765387e-02,
        -2.15792372e-01, -1.89027809e-01,  8.47173934e-02,
         3.50158255e-02, -1.51880002e-01,  1.37604439e-01,
         1.09205244e-01, -2.32574019e-02,  2.14590834e-01,
        -4.78213867e-02, -1.44883609e-02,  1.00405248e-01,
         2.35615090e-01,  1.86555635e-01, -1.86548959e-01,
        -1.56428663e-03,  9.51393020e-03,  1.45010341e-01,
        -3.32226426e-02,  1.92580836e-01,  1.79668427e-02,
         4.79881299e-03,  3.16578175e-02, -8.37821716e-02,
        -6.32266032e-02, -1.02132542e-01,  2.41429000e-01,
         2.38934280e-01, -1.43408383e-01, -2.10702409e-01,
         1.27197977e-01, -2.03783439e-01,  4.10939091e-03,
         1.26931735e-01, -7.01411470e-02, -1.81586939e-01,
        -1.42283462e-01,  1.55213823e-01,  7.44129337e-02,
         1.56597483e-01,  1.38342268e-01,  1.04257731e-01,
        -1.44634839e-01,  1.27152328e-01, -3.19461396e-02,
        -1.58155002e-01,  4.51515367e-02, -1.36991653e-01,
        -1.25536474e-01]]), array([[-0.05384787],
       [ 0.19834436],
       [-0.19932131],
       [-0.09777462],
       [ 0.12717466],
       [ 0.2210332 ],
       [-0.04669501],
       [-0.21587324],
       [-0.13792254],
       [-0.12696848],
       [-0.00227986],
       [-0.21699566],
       [ 0.07360719],
       [ 0.13428638],
       [-0.04815885],
       [-0.10158578],
       [ 0.05142776],
       [ 0.24587772],
       [-0.09036314],
       [-0.19379286],
       [-0.12037831],
       [-0.10198003],
       [ 0.01735451],
       [-0.1987123 ],
       [-0.08073059],
       [ 0.20828656],
       [ 0.07569607],
       [-0.13090581],
       [ 0.11616401],
       [-0.0927735 ],
       [ 0.0610385 ],
       [-0.01587124],
       [-0.09951844],
       [ 0.23559954],
       [ 0.14052908],
       [ 0.19524576],
       [-0.12811217],
       [ 0.01577592],
       [ 0.0839929 ],
       [ 0.23923163],
       [-0.0855503 ],
       [ 0.00826438],
       [ 0.20874598],
       [-0.10766167],
       [ 0.20714982],
       [-0.17600006],
       [-0.09890318],
       [ 0.05205851],
       [ 0.05147864],
       [-0.16893097],
       [ 0.17967818],
       [ 0.19340591],
       [ 0.22867646],
       [ 0.17332091],
       [ 0.116788  ],
       [ 0.0055659 ],
       [ 0.08240033],
       [ 0.13715003],
       [-0.01857152],
       [ 0.21171638],
       [-0.03809429],
       [-0.04662775],
       [-0.15941523],
       [ 0.19482577],
       [ 0.23770467],
       [ 0.21707481],
       [-0.01654578],
       [-0.05666671],
       [ 0.17283686],
       [-0.04340341],
       [-0.18026078],
       [-0.06279457],
       [ 0.23045503],
       [-0.20905069],
       [ 0.10695453],
       [ 0.1559909 ],
       [-0.04731128],
       [ 0.16426869],
       [ 0.04526916],
       [ 0.14842033],
       [-0.06818273],
       [-0.0832287 ],
       [ 0.08650578],
       [ 0.00427557],
       [-0.01680845],
       [-0.06661417],
       [-0.12357323],
       [-0.0311802 ],
       [-0.08878864],
       [-0.09778458],
       [ 0.11636888],
       [ 0.00688265],
       [-0.03002649],
       [-0.22340813],
       [ 0.13954041],
       [-0.15916485],
       [-0.12933879],
       [-0.11860441],
       [-0.10899936],
       [-0.06978644]])]
early_stopping: False
epsilon: 1e-08
fit: <bound method BaseMultilayerPerceptron.fit of MLPRegressor()>
get_metadata_routing: <bound method _MetadataRequester.get_metadata_routing of MLPRegressor()>
get_params: <bound method BaseEstimator.get_params of MLPRegressor()>
hidden_layer_sizes: (100,)
intercepts_: [array([ 0.00644683,  0.1386856 ,  0.09566904,  0.14571579,  0.07657632,
        0.20959969,  0.21830272, -0.17341715, -0.20303536, -0.1728408 ,
       -0.06803874,  0.12234987,  0.1013653 ,  0.00940267, -0.0217833 ,
       -0.16275995,  0.07932112,  0.11856907, -0.02530075,  0.17170465,
        0.05883051,  0.07504214,  0.0348483 ,  0.10197498, -0.06295015,
       -0.04782321,  0.07958364, -0.2052439 ,  0.17846061, -0.09345405,
       -0.21601817,  0.00046533,  0.05170626,  0.08512291,  0.0180931 ,
        0.07489644,  0.02228189,  0.21671917, -0.03065376, -0.1786187 ,
        0.19251957, -0.13790029, -0.04990908,  0.17786381,  0.05929279,
       -0.10897744,  0.14255497, -0.03085727,  0.1053656 ,  0.00491524,
        0.19657013, -0.197767  ,  0.02787228,  0.21135507, -0.11261189,
       -0.10516971,  0.16553719,  0.04442963,  0.17343503,  0.13156943,
        0.1132498 ,  0.00491127,  0.20389958,  0.17840805, -0.21260181,
       -0.20325039,  0.14709026, -0.08029233, -0.10168987,  0.05114888,
        0.05414411,  0.12503785, -0.05277545, -0.05933522,  0.19319931,
       -0.23074669, -0.17719176,  0.23869333,  0.02745975,  0.13224712,
        0.13391986, -0.12585009,  0.21595056, -0.0691647 ,  0.1965366 ,
       -0.06967129,  0.039365  , -0.21238119, -0.21574845, -0.16193833,
        0.04180178, -0.18270585,  0.13251341, -0.06766486,  0.02885266,
       -0.21113663, -0.22240226, -0.0435278 , -0.13910151, -0.18487094]), array([0.07229859])]
learning_rate: constant
learning_rate_init: 0.001
loss: squared_error
loss_: 0.345642251639425
loss_curve_: [0.51297515077605, 0.4773615390249245, 0.44586393264562, 0.418533911274858, 0.39540549315480306, 0.37670816041383504, 0.3620544935915209, 0.3511834338355374, 0.3435361881711942, 0.3387949600104987, 0.336568197680805, 0.33633635167645876, 0.33757073408344723, 0.3397328129039031, 0.34230454918476544, 0.34483153854663534, 0.34695850543660517, 0.34844944844110026, 0.3491898293051604, 0.3491734498318791, 0.34847954757859045, 0.3472458811652541, 0.345642251639425]
max_fun: 15000
max_iter: 200
momentum: 0.9
n_features_in_: 6
n_iter_: 23
n_iter_no_change: 10
n_layers_: 3
n_outputs_: 1
nesterovs_momentum: True
out_activation_: identity
partial_fit: <bound method MLPRegressor.partial_fit of MLPRegressor()>
power_t: 0.5
predict: <bound method MLPRegressor.predict of MLPRegressor()>
random_state: None
score: <bound method RegressorMixin.score of MLPRegressor()>
set_params: <bound method BaseEstimator.set_params of MLPRegressor()>
set_score_request: <function RequestMethod.__get__.<locals>.func at 0x14665a940>
shuffle: True
solver: adam
t_: 3749
tol: 0.0001
validation_fraction: 0.1
validation_scores_: None
verbose: False
warm_start: False
--------------------------------------------------