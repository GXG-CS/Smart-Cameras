C: 1.0
_abc_impl: <_abc._abc_data object at 0x11ffa3e80>
_build_request_for_signature: <bound method _MetadataRequester._build_request_for_signature of <class 'sklearn.svm._classes.SVR'>>
_check_feature_names: <bound method BaseEstimator._check_feature_names of SVR()>
_check_n_features: <bound method BaseEstimator._check_n_features of SVR()>
_compute_kernel: <bound method BaseLibSVM._compute_kernel of SVR()>
_decision_function: <bound method BaseLibSVM._decision_function of SVR()>
_dense_decision_function: <bound method BaseLibSVM._dense_decision_function of SVR()>
_dense_fit: <bound method BaseLibSVM._dense_fit of SVR()>
_dense_predict: <bound method BaseLibSVM._dense_predict of SVR()>
_dual_coef_: [[-1.          1.          1.         -1.         -1.         -1.
  -1.         -1.          1.          1.          1.          1.
   1.          1.         -1.          1.          1.         -1.
   1.          1.         -1.         -1.         -1.          1.
  -0.64699371 -1.         -1.         -1.         -1.         -1.
   1.         -1.          1.          1.         -1.         -1.
   1.          1.         -1.          1.          1.         -1.
   1.         -1.          1.         -0.56220187 -1.          1.
  -1.          1.          1.          1.         -1.         -1.
  -1.         -1.         -1.          1.         -1.         -1.
  -1.          1.          1.          1.         -1.          1.
   1.          1.         -1.          1.         -1.         -1.
   1.         -1.          1.          1.         -1.          1.
  -1.         -1.          1.          1.          1.         -1.
   1.         -1.          1.         -1.         -1.         -1.
  -1.          0.20919557  1.          1.         -1.          1.
   1.          1.          1.          1.          1.          1.
  -1.         -1.          1.         -1.         -1.         -1.
   1.         -1.         -1.         -1.          1.          1.
  -1.          1.        ]]
_estimator_type: regressor
_gamma: 0.00904229729774087
_get_coef: <bound method BaseLibSVM._get_coef of SVR()>
_get_default_requests: <bound method _MetadataRequester._get_default_requests of <class 'sklearn.svm._classes.SVR'>>
_get_metadata_request: <bound method _MetadataRequester._get_metadata_request of SVR()>
_get_param_names: <bound method BaseEstimator._get_param_names of <class 'sklearn.svm._classes.SVR'>>
_get_tags: <bound method BaseEstimator._get_tags of SVR()>
_impl: epsilon_svr
_intercept_: [0.42664595]
_more_tags: <bound method SVR._more_tags of SVR()>
_n_support: [116 116]
_num_iter: [74]
_parameter_constraints: {'kernel': [<sklearn.utils._param_validation.StrOptions object at 0x11fc20580>, <built-in function callable>], 'degree': [<sklearn.utils._param_validation.Interval object at 0x11fc20610>], 'gamma': [<sklearn.utils._param_validation.StrOptions object at 0x11fc20640>, <sklearn.utils._param_validation.Interval object at 0x11fd21130>], 'coef0': [<sklearn.utils._param_validation.Interval object at 0x11fd21160>], 'tol': [<sklearn.utils._param_validation.Interval object at 0x11fd211c0>], 'C': [<sklearn.utils._param_validation.Interval object at 0x11fd21220>], 'epsilon': [<sklearn.utils._param_validation.Interval object at 0x11fd212e0>], 'shrinking': ['boolean'], 'cache_size': [<sklearn.utils._param_validation.Interval object at 0x11fd21340>], 'verbose': ['verbose'], 'max_iter': [<sklearn.utils._param_validation.Interval object at 0x11fd21430>]}
_probA: []
_probB: []
_repr_html_: <bound method BaseEstimator._repr_html_inner of SVR()>
_repr_html_inner: <bound method BaseEstimator._repr_html_inner of SVR()>
_repr_mimebundle_: <bound method BaseEstimator._repr_mimebundle_ of SVR()>
_sparse: False
_sparse_decision_function: <bound method BaseLibSVM._sparse_decision_function of SVR()>
_sparse_fit: <bound method BaseLibSVM._sparse_fit of SVR()>
_sparse_kernels: ['linear', 'poly', 'rbf', 'sigmoid', 'precomputed']
_sparse_predict: <bound method BaseLibSVM._sparse_predict of SVR()>
_validate_data: <bound method BaseEstimator._validate_data of SVR()>
_validate_for_predict: <bound method BaseLibSVM._validate_for_predict of SVR()>
_validate_params: <bound method BaseEstimator._validate_params of SVR()>
_validate_targets: <bound method BaseLibSVM._validate_targets of SVR()>
_warn_from_fit_status: <bound method BaseLibSVM._warn_from_fit_status of SVR()>
cache_size: 200
class_weight: None
class_weight_: []
coef0: 0.0
coef_: Error retrieving attribute - coef_ is only available when using a linear kernel
degree: 3
dual_coef_: [[-1.          1.          1.         -1.         -1.         -1.
  -1.         -1.          1.          1.          1.          1.
   1.          1.         -1.          1.          1.         -1.
   1.          1.         -1.         -1.         -1.          1.
  -0.64699371 -1.         -1.         -1.         -1.         -1.
   1.         -1.          1.          1.         -1.         -1.
   1.          1.         -1.          1.          1.         -1.
   1.         -1.          1.         -0.56220187 -1.          1.
  -1.          1.          1.          1.         -1.         -1.
  -1.         -1.         -1.          1.         -1.         -1.
  -1.          1.          1.          1.         -1.          1.
   1.          1.         -1.          1.         -1.         -1.
   1.         -1.          1.          1.         -1.          1.
  -1.         -1.          1.          1.          1.         -1.
   1.         -1.          1.         -1.         -1.         -1.
  -1.          0.20919557  1.          1.         -1.          1.
   1.          1.          1.          1.          1.          1.
  -1.         -1.          1.         -1.         -1.         -1.
   1.         -1.         -1.         -1.          1.          1.
  -1.          1.        ]]
epsilon: 0.1
fit: <bound method BaseLibSVM.fit of SVR()>
fit_status_: 0
gamma: scale
get_metadata_routing: <bound method _MetadataRequester.get_metadata_routing of SVR()>
get_params: <bound method BaseEstimator.get_params of SVR()>
intercept_: [0.42664595]
kernel: rbf
max_iter: -1
n_features_in_: 6
n_iter_: 74
n_support_: [116]
nu: 0.0
predict: <bound method BaseLibSVM.predict of SVR()>
probability: False
random_state: None
score: <bound method RegressorMixin.score of SVR()>
set_fit_request: <function RequestMethod.__get__.<locals>.func at 0x11ffb2790>
set_params: <bound method BaseEstimator.set_params of SVR()>
set_score_request: <function RequestMethod.__get__.<locals>.func at 0x11ffb2790>
shape_fit_: (163, 6)
shrinking: True
support_: [  0   1   2   3   4   5   8   9  10  12  13  14  15  16  17  18  19  20
  22  23  24  25  26  27  28  29  30  31  32  33  34  36  37  38  39  41
  43  44  45  46  48  49  50  51  52  53  55  56  57  59  60  61  62  63
  64  65  68  69  70  73  74  75  80  81  86  87  88  91  92  93  94  96
  98  99 101 103 104 105 107 108 109 110 111 112 113 115 116 117 119 120
 122 123 124 125 129 130 131 132 133 135 136 138 139 141 142 144 148 151
 152 153 154 156 159 160 161 162]
support_vectors_: [[ 5.30330491  0.69314718  6.55250789  0.41871033  3.31781577 13.86294456]
 [ 5.86078622  1.09861229  6.55250789  0.65232519  2.76380022 13.86294456]
 [ 5.99396143  1.09861229  6.80350526  0.76546784  2.55567572 12.47665306]
 [ 6.11146734  0.69314718  6.55250789  0.46373402  3.1888289  12.47665306]
 [ 5.86078622  0.69314718  6.55250789  0.46373402  3.19703913 13.86294456]
 [ 5.70711026  0.69314718  6.80350526  0.53062825  3.02626148 12.47665306]
 [ 5.99396143  0.69314718  6.55250789  0.46373402  3.18635263 13.16979834]
 [ 5.52545294  0.69314718  6.68586095  0.48242615  3.15016863 12.47665306]
 [ 5.52545294  1.60943791  6.39859493  0.68309684  2.69395128 13.16979834]
 [ 6.11146734  1.09861229  6.80350526  0.78390154  2.52252351 13.86294456]
 [ 5.52545294  1.09861229  6.68586095  0.67294447  2.73176673 13.16979834]
 [ 5.70711026  1.09861229  6.68586095  0.68813464  2.69867304 13.16979834]
 [ 5.30330491  1.60943791  6.55250789  0.67803354  2.70938265 13.86294456]
 [ 5.52545294  1.09861229  6.80350526  0.70309751  2.66930937 12.47665306]
 [ 5.30330491  0.69314718  6.68586095  0.45107562  3.21887582 13.86294456]
 [ 5.30330491  1.09861229  6.80350526  0.65752     2.76127496 12.47665306]
 [ 5.86078622  1.09861229  6.80350526  0.75141609  2.58399755 12.47665306]
 [ 5.52545294  0.69314718  6.39859493  0.42526774  3.28989331 13.86294456]
 [ 6.11146734  1.09861229  6.39859493  0.5988365   2.85532012 13.16979834]
 [ 6.11146734  1.09861229  6.68586095  0.72270598  2.61593491 12.47665306]
 [ 6.11146734  0.69314718  6.39859493  0.41210965  3.32107134 13.86294456]
 [ 5.70711026  0.69314718  6.68586095  0.49469624  3.11395965 12.47665306]
 [ 5.99396143  0.69314718  6.80350526  0.55388511  2.97858611 13.16979834]
 [ 5.86078622  1.09861229  6.80350526  0.75141609  2.59151638 13.86294456]
 [ 5.30330491  0.69314718  6.55250789  0.41871033  3.32215417 12.47665306]
 [ 5.70711026  0.69314718  6.39859493  0.42526774  3.28765534 13.16979834]
 [ 5.99396143  0.69314718  6.68586095  0.5068176   3.07639018 13.16979834]
 [ 5.70711026  0.69314718  6.68586095  0.49469624  3.11484775 13.86294456]
 [ 5.52545294  0.69314718  6.55250789  0.43825493  3.253084   13.16979834]
 [ 5.99396143  0.69314718  6.80350526  0.55388511  2.97807734 12.47665306]
 [ 5.70711026  1.09861229  6.68586095  0.68813464  2.69327492 13.86294456]
 [ 6.11146734  0.69314718  6.55250789  0.46373402  3.18759153 13.86294456]
 [ 5.70711026  1.09861229  6.39859493  0.57661336  2.90799336 13.16979834]
 [ 5.86078622  1.09861229  6.39859493  0.60431597  2.85933965 13.16979834]
 [ 5.70711026  0.69314718  6.80350526  0.53062825  3.02626148 13.16979834]
 [ 5.86078622  0.69314718  6.80350526  0.54232429  2.99673177 13.16979834]
 [ 5.70711026  1.09861229  6.68586095  0.69314718  2.69056489 12.47665306]
 [ 5.52545294  1.09861229  6.80350526  0.70803579  2.66444656 13.86294456]
 [ 5.86078622  0.69314718  6.68586095  0.50077529  3.09285898 12.47665306]
 [ 5.70711026  1.09861229  6.39859493  0.61518564  2.83438912 13.86294456]
 [ 5.70711026  1.09861229  6.80350526  0.73716407  2.61006979 13.16979834]
 [ 5.99396143  0.69314718  6.55250789  0.46373402  3.18304137 13.86294456]
 [ 6.11146734  1.09861229  6.55250789  0.66782937  2.71997877 13.16979834]
 [ 5.52545294  0.69314718  6.55250789  0.43825493  3.25385679 12.47665306]
 [ 5.30330491  1.09861229  6.55250789  0.57661336  2.91831113 13.16979834]
 [ 6.11146734  0.69314718  6.39859493  0.41210965  3.31998733 12.47665306]
 [ 5.30330491  0.69314718  6.55250789  0.41871033  3.31745339 13.16979834]
 [ 5.52545294  1.09861229  6.55250789  0.62057649  2.82731362 13.16979834]
 [ 6.11146734  0.69314718  6.80350526  0.54812141  2.97399778 12.47665306]
 [ 5.30330491  1.09861229  6.55250789  0.58221562  2.90962957 12.47665306]
 [ 6.11146734  1.09861229  6.80350526  0.73716407  2.57945897 13.16979834]
 [ 6.11146734  1.09861229  6.39859493  0.60431597  2.8524391  13.86294456]
 [ 5.86078622  0.69314718  6.39859493  0.43178242  3.27789917 13.16979834]
 [ 5.52545294  0.69314718  6.80350526  0.51282363  3.06292352 13.86294456]
 [ 5.52545294  0.69314718  6.55250789  0.43825493  3.25192368 13.86294456]
 [ 5.52545294  0.69314718  6.80350526  0.51282363  3.06479181 13.16979834]
 [ 5.70711026  0.69314718  6.80350526  0.53062825  3.02577639 13.86294456]
 [ 5.30330491  1.09861229  6.68586095  0.62057649  2.82672173 13.16979834]
 [ 5.52545294  0.69314718  6.39859493  0.42526774  3.28877495 13.16979834]
 [ 5.52545294  0.69314718  6.68586095  0.47623418  3.15188096 13.16979834]
 [ 5.99396143  0.69314718  6.39859493  0.43178242  3.27525616 13.86294456]
 [ 5.70711026  1.09861229  6.55250789  0.64710324  2.77695418 12.47665306]
 [ 5.99396143  1.09861229  6.80350526  0.75612198  2.57031953 13.86294456]
 [ 5.70711026  1.09861229  6.80350526  0.73716407  2.60490944 12.47665306]
 [ 6.11146734  0.69314718  6.55250789  0.46373402  3.19047635 13.16979834]
 [ 6.11146734  1.09861229  6.55250789  0.66268797  2.72523503 13.86294456]
 [ 5.52545294  1.09861229  6.68586095  0.66268797  2.737609   13.86294456]
 [ 5.99396143  1.09861229  6.80350526  0.76546784  2.55955019 13.16979834]
 [ 5.52545294  0.69314718  6.39859493  0.42526774  3.28952066 12.47665306]
 [ 5.99396143  1.09861229  6.68586095  0.71294981  2.65042109 12.47665306]
 [ 5.86078622  0.69314718  6.55250789  0.46373402  3.19663022 12.47665306]
 [ 5.99396143  0.69314718  6.80350526  0.55388511  2.9775683  13.86294456]
 [ 6.11146734  1.09861229  6.80350526  0.73236789  2.59076704 12.47665306]
 [ 5.86078622  0.69314718  6.39859493  0.43178242  3.27789917 13.86294456]
 [ 5.70711026  1.60943791  6.39859493  0.69813472  2.67552701 13.16979834]
 [ 5.30330491  1.09861229  6.80350526  0.65752     2.76064265 13.86294456]
 [ 5.30330491  0.69314718  6.68586095  0.45107562  3.21847574 13.16979834]
 [ 5.99396143  1.09861229  6.68586095  0.71294981  2.64971462 13.86294456]
 [ 6.11146734  0.69314718  6.39859493  0.41210965  3.31781577 13.16979834]
 [ 6.11146734  0.69314718  6.80350526  0.54812141  2.97348666 13.16979834]
 [ 5.70711026  1.09861229  6.80350526  0.73236789  2.61006979 13.86294456]
 [ 5.86078622  1.09861229  6.55250789  0.65232519  2.76190687 12.47665306]
 [ 5.86078622  1.09861229  6.68586095  0.70803579  2.65815943 13.16979834]
 [ 5.30330491  0.69314718  6.80350526  0.48858001  3.1363634  13.16979834]
 [ 5.30330491  1.09861229  6.68586095  0.61518564  2.83380141 12.47665306]
 [ 6.11146734  0.69314718  6.80350526  0.55388511  2.97348666 13.86294456]
 [ 6.11146734  1.09861229  6.68586095  0.71783979  2.62394369 13.16979834]
 [ 5.99396143  0.69314718  6.55250789  0.46373402  3.18304137 12.47665306]
 [ 5.70711026  0.69314718  6.55250789  0.42526774  3.27714473 13.86294456]
 [ 6.11146734  0.69314718  6.68586095  0.5068176   3.07223024 13.86294456]
 [ 5.30330491  0.69314718  6.39859493  0.41871033  3.30652033 13.16979834]
 [ 5.70711026  1.60943791  6.39859493  0.70309751  2.65885996 13.86294456]
 [ 5.52545294  1.09861229  6.39859493  0.57097955  2.92477318 12.47665306]
 [ 5.30330491  1.09861229  6.68586095  0.61518564  2.83321334 13.86294456]
 [ 5.99396143  0.69314718  6.68586095  0.51282363  3.07500545 12.47665306]
 [ 5.30330491  1.60943791  6.39859493  0.64185389  2.78192005 12.47665306]
 [ 5.52545294  1.60943791  6.39859493  0.69314718  2.68170623 13.86294456]
 [ 5.99396143  1.09861229  6.55250789  0.66268797  2.74727091 13.86294456]
 [ 5.99396143  1.09861229  6.68586095  0.71294981  2.64048488 13.16979834]
 [ 6.11146734  1.09861229  6.55250789  0.66782937  2.71734025 12.47665306]
 [ 5.99396143  1.09861229  6.55250789  0.66782937  2.73566537 13.16979834]
 [ 5.30330491  1.09861229  6.55250789  0.58221562  2.91017439 13.86294456]
 [ 5.70711026  0.69314718  6.55250789  0.45107562  3.24220165 12.47665306]
 [ 5.52545294  0.69314718  6.68586095  0.47623418  3.15188096 13.86294456]
 [ 5.30330491  1.60943791  6.55250789  0.68813464  2.69934576 13.16979834]
 [ 5.99396143  0.69314718  6.68586095  0.51282363  3.07546724 13.86294456]
 [ 5.86078622  0.69314718  6.39859493  0.43178242  3.28053521 12.47665306]
 [ 5.86078622  0.69314718  6.68586095  0.50077529  3.0914969  13.86294456]
 [ 5.86078622  1.09861229  6.80350526  0.75612198  2.56725439 13.16979834]
 [ 5.70711026  0.69314718  6.68586095  0.49469624  3.11662159 13.16979834]
 [ 5.30330491  0.69314718  6.39859493  0.41871033  3.30615383 13.86294456]
 [ 5.30330491  0.69314718  6.68586095  0.45107562  3.21927574 12.47665306]
 [ 6.11146734  1.09861229  6.68586095  0.71783979  2.61666564 13.86294456]
 [ 5.86078622  1.09861229  6.55250789  0.65752     2.7581094  13.16979834]
 [ 5.30330491  0.69314718  6.80350526  0.48858001  3.13679771 12.47665306]
 [ 5.86078622  1.09861229  6.39859493  0.5988365   2.87412945 13.86294456]]
tol: 0.001
unused_param: random_state
verbose: False
--------------------------------------------------