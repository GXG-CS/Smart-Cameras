_abc_impl: <_abc._abc_data object at 0x16b25bc80>
_backprop: <bound method BaseMultilayerPerceptron._backprop of MLPRegressor()>
_build_request_for_signature: <bound method _MetadataRequester._build_request_for_signature of <class 'sklearn.neural_network._multilayer_perceptron.MLPRegressor'>>
_check_feature_names: <bound method BaseEstimator._check_feature_names of MLPRegressor()>
_check_n_features: <bound method BaseEstimator._check_n_features of MLPRegressor()>
_check_solver: <bound method BaseMultilayerPerceptron._check_solver of MLPRegressor()>
_compute_loss_grad: <bound method BaseMultilayerPerceptron._compute_loss_grad of MLPRegressor()>
_estimator_type: regressor
_fit: <bound method BaseMultilayerPerceptron._fit of MLPRegressor()>
_fit_lbfgs: <bound method BaseMultilayerPerceptron._fit_lbfgs of MLPRegressor()>
_fit_stochastic: <bound method BaseMultilayerPerceptron._fit_stochastic of MLPRegressor()>
_forward_pass: <bound method BaseMultilayerPerceptron._forward_pass of MLPRegressor()>
_forward_pass_fast: <bound method BaseMultilayerPerceptron._forward_pass_fast of MLPRegressor()>
_get_default_requests: <bound method _MetadataRequester._get_default_requests of <class 'sklearn.neural_network._multilayer_perceptron.MLPRegressor'>>
_get_metadata_request: <bound method _MetadataRequester._get_metadata_request of MLPRegressor()>
_get_param_names: <bound method BaseEstimator._get_param_names of <class 'sklearn.neural_network._multilayer_perceptron.MLPRegressor'>>
_get_tags: <bound method BaseEstimator._get_tags of MLPRegressor()>
_init_coef: <bound method BaseMultilayerPerceptron._init_coef of MLPRegressor()>
_initialize: <bound method BaseMultilayerPerceptron._initialize of MLPRegressor()>
_loss_grad_lbfgs: <bound method BaseMultilayerPerceptron._loss_grad_lbfgs of MLPRegressor()>
_more_tags: <bound method RegressorMixin._more_tags of MLPRegressor()>
_no_improvement_count: 11
_optimizer: <sklearn.neural_network._stochastic_optimizers.AdamOptimizer object at 0x16b269670>
_parameter_constraints: {'hidden_layer_sizes': ['array-like', <sklearn.utils._param_validation.Interval object at 0x1634acdf0>], 'activation': [<sklearn.utils._param_validation.StrOptions object at 0x1634ace20>], 'solver': [<sklearn.utils._param_validation.StrOptions object at 0x16b2511f0>], 'alpha': [<sklearn.utils._param_validation.Interval object at 0x16b251700>], 'batch_size': [<sklearn.utils._param_validation.StrOptions object at 0x16b251730>, <sklearn.utils._param_validation.Interval object at 0x16b2517c0>], 'learning_rate': [<sklearn.utils._param_validation.StrOptions object at 0x16b2517f0>], 'learning_rate_init': [<sklearn.utils._param_validation.Interval object at 0x16b251880>], 'power_t': [<sklearn.utils._param_validation.Interval object at 0x16b2518b0>], 'max_iter': [<sklearn.utils._param_validation.Interval object at 0x16b251910>], 'shuffle': ['boolean'], 'random_state': ['random_state'], 'tol': [<sklearn.utils._param_validation.Interval object at 0x16b251970>], 'verbose': ['verbose'], 'warm_start': ['boolean'], 'momentum': [<sklearn.utils._param_validation.Interval object at 0x16b2519d0>], 'nesterovs_momentum': ['boolean'], 'early_stopping': ['boolean'], 'validation_fraction': [<sklearn.utils._param_validation.Interval object at 0x16b251a30>], 'beta_1': [<sklearn.utils._param_validation.Interval object at 0x16b251a90>], 'beta_2': [<sklearn.utils._param_validation.Interval object at 0x16b251af0>], 'epsilon': [<sklearn.utils._param_validation.Interval object at 0x16b251b50>], 'n_iter_no_change': [<sklearn.utils._param_validation.Interval object at 0x16b251bb0>, <sklearn.utils._param_validation.Options object at 0x16b251c10>], 'max_fun': [<sklearn.utils._param_validation.Interval object at 0x16b251ca0>]}
_predict: <bound method MLPRegressor._predict of MLPRegressor()>
_random_state: RandomState(MT19937)
_repr_html_: <bound method BaseEstimator._repr_html_inner of MLPRegressor()>
_repr_html_inner: <bound method BaseEstimator._repr_html_inner of MLPRegressor()>
_repr_mimebundle_: <bound method BaseEstimator._repr_mimebundle_ of MLPRegressor()>
_score: <bound method MLPRegressor._score of MLPRegressor()>
_unpack: <bound method BaseMultilayerPerceptron._unpack of MLPRegressor()>
_update_no_improvement_count: <bound method BaseMultilayerPerceptron._update_no_improvement_count of MLPRegressor()>
_validate_data: <bound method BaseEstimator._validate_data of MLPRegressor()>
_validate_input: <bound method MLPRegressor._validate_input of MLPRegressor()>
_validate_params: <bound method BaseEstimator._validate_params of MLPRegressor()>
activation: relu
alpha: 0.0001
batch_size: auto
best_loss_: 0.33023698876437907
best_validation_score_: None
beta_1: 0.9
beta_2: 0.999
coefs_: [array([[ 1.97430396e-01,  1.22268869e-02,  5.67200265e-02,
         1.65045469e-01, -3.59012518e-02,  8.26696423e-02,
         1.99171691e-01,  1.11072523e-01, -1.22655682e-01,
         9.07570827e-02,  4.48254445e-02, -2.09969217e-01,
         1.99706764e-01,  4.54211652e-02, -1.28830961e-01,
         1.36573200e-01,  1.14466785e-01,  7.19863413e-02,
        -1.96561636e-01, -2.03497916e-02, -1.34474176e-01,
        -1.05669463e-01,  2.12346341e-01, -1.36460006e-01,
        -1.67804399e-01, -8.62853874e-02, -1.51762663e-01,
         2.00358496e-01,  1.11991755e-01,  1.11086251e-01,
         7.09942146e-02, -1.78579252e-01,  1.70111778e-01,
         3.54437271e-02,  8.53908892e-03, -1.27802811e-01,
        -1.61438204e-01,  2.58376861e-01,  1.82735771e-01,
         5.23449097e-02,  1.34851903e-01, -1.69029919e-01,
         3.92593428e-02,  2.38494597e-01,  1.69097309e-01,
         6.37352472e-02, -4.15632995e-02,  1.73690938e-01,
        -4.77153626e-02, -6.61658290e-02, -1.17080152e-01,
        -1.51078216e-01,  4.67788102e-02,  1.30626748e-01,
         1.01400913e-01, -2.60866436e-02,  1.00697514e-01,
         1.94271266e-01,  1.25122209e-01,  1.68630999e-01,
        -8.75369434e-03,  1.18775998e-01, -1.47318765e-01,
        -1.87190044e-01, -1.16638571e-01, -7.15508726e-03,
        -3.15719480e-02, -4.78660415e-02,  4.76636951e-02,
        -1.93038455e-01,  1.11365940e-01, -7.64788937e-03,
         1.22900752e-01, -1.06898933e-01,  4.99340916e-02,
        -7.93448042e-02,  1.65619536e-01,  2.35090538e-04,
         5.94908609e-03,  7.72322954e-02, -1.82572269e-02,
        -7.72800783e-02,  2.51873284e-01,  1.90952654e-01,
         1.45755194e-02, -1.59955404e-02, -1.90135835e-01,
        -4.40951859e-02, -8.26787388e-02,  1.25537019e-01,
         7.00339821e-02, -8.14476617e-02, -3.42836634e-02,
        -1.16030647e-01,  1.94354356e-01, -1.57977405e-01,
        -1.99828975e-01, -7.86006765e-02,  1.19986669e-01,
        -6.17241089e-02],
       [ 8.19675550e-02,  9.19996813e-02,  1.29231417e-01,
         1.27737128e-01,  1.80957093e-02, -1.71471563e-01,
        -1.91689119e-02, -1.15822535e-01,  1.83608399e-01,
        -7.14876676e-03, -1.57625987e-02, -8.50906054e-02,
         1.37445583e-01, -6.01195598e-02,  2.42595651e-03,
         1.93792041e-01,  2.61907006e-01, -1.13114647e-01,
        -6.11559585e-02, -1.94974018e-01, -1.71972131e-01,
        -4.43578113e-02,  2.69555893e-02,  1.49110082e-01,
        -2.02028797e-01,  1.35973724e-01, -1.82370566e-02,
        -9.41820897e-03, -1.63016690e-01,  2.61962700e-01,
        -9.03603924e-02, -1.54730338e-01,  2.13061086e-01,
         2.07597628e-01, -1.93371434e-01, -2.96432097e-02,
         1.34024976e-01,  7.48776250e-02, -1.90743116e-01,
        -1.08484071e-01, -1.78796382e-01, -9.58610380e-02,
         9.99682964e-03,  2.09107665e-01, -3.67200157e-02,
        -1.06362782e-01, -5.77075227e-03, -1.54063507e-01,
         1.64373103e-01,  1.56193286e-01, -2.51995678e-02,
        -1.06355735e-01, -1.64071237e-02, -1.90602113e-01,
         1.02873326e-01,  7.45196525e-02,  1.11633340e-01,
        -1.09957113e-01, -1.43477337e-01,  4.95743828e-02,
         1.56985715e-01, -1.01841114e-01, -1.12136348e-01,
        -1.72276264e-01, -1.05393666e-02,  7.96935973e-02,
        -2.04918074e-01,  1.31536015e-01,  6.77963378e-02,
         1.47000030e-01, -8.90200493e-03,  2.53180356e-01,
        -3.03252585e-02,  7.04781946e-02,  9.68048574e-03,
        -1.78336049e-01,  3.41269556e-02, -2.06670745e-01,
         1.67684467e-01,  2.16876900e-01,  1.11111215e-01,
         2.33036654e-02,  3.07399667e-03,  2.19711689e-01,
         9.01882766e-02, -1.93325557e-01, -1.96988958e-01,
        -1.82619031e-01,  1.20256556e-01,  1.09172158e-01,
         2.10327212e-01, -1.67115135e-01,  3.49937685e-02,
        -2.04764981e-01,  8.54283928e-02,  2.05199109e-01,
        -1.69124473e-01, -8.56634387e-02, -6.99715622e-02,
         1.42347459e-01],
       [ 1.54040143e-01,  1.95987809e-01,  3.24401808e-02,
        -1.29413473e-01, -1.18359312e-01,  1.83024523e-01,
         9.40507090e-02,  1.60291882e-01,  1.98398526e-01,
        -1.66222880e-01, -8.44454888e-02,  8.89530880e-02,
        -4.96143911e-02,  9.18519995e-02, -3.50008607e-02,
         1.98662885e-01,  2.72138954e-02, -1.62423669e-01,
        -3.96283522e-02,  1.10310453e-01, -5.01383340e-02,
        -1.00939581e-01,  2.08152130e-01, -1.75895934e-01,
         4.58754850e-02,  6.91802864e-02, -2.38687382e-03,
        -9.42761097e-02,  4.54658128e-02,  2.27189096e-01,
        -1.96535616e-01,  8.89147448e-02,  6.72109463e-02,
        -1.52883627e-01, -1.00491958e-01, -1.65574338e-01,
        -1.60482673e-01,  7.04326059e-02, -7.24046966e-02,
         2.51507060e-01,  1.67425246e-01, -1.36383338e-01,
         8.15847194e-02,  1.03244519e-01, -1.47217395e-01,
         1.60680151e-01, -1.47462036e-01, -4.35158696e-02,
        -1.43730148e-01,  1.58586238e-01,  1.85201466e-01,
         5.88331479e-02,  1.80087011e-01, -6.29619543e-02,
         1.23279701e-01,  1.62959266e-01,  2.20979050e-01,
         4.55006631e-02, -8.53567875e-02,  1.00861048e-03,
         1.66275488e-02,  1.63674119e-01,  5.44588607e-02,
        -9.19843076e-02,  1.61399923e-01,  1.99036188e-01,
        -6.35601957e-02,  2.02320198e-01, -1.03800237e-03,
        -2.72627151e-02,  8.92093611e-02, -4.92363164e-02,
         2.12547900e-01, -2.21694691e-02,  7.15580631e-02,
        -1.09554168e-02,  2.10494199e-01,  1.55731791e-02,
        -1.38037211e-01,  3.91186715e-02, -1.81782427e-01,
         1.63966149e-01,  7.43219201e-02,  1.74721909e-01,
        -9.03660424e-02,  1.59270002e-01, -1.61268243e-01,
        -6.34413139e-02,  8.26054531e-02,  2.16489653e-01,
        -2.40944072e-01, -2.11548883e-01,  4.32463623e-02,
         1.79907435e-01,  6.50747729e-02, -1.40908872e-01,
         1.83681284e-01, -1.66745997e-02, -7.32212917e-02,
         1.57682038e-01],
       [ 3.20792054e-02,  1.98289812e-01,  2.12347856e-01,
        -5.55692402e-02, -9.01924744e-02, -1.65806507e-01,
         3.42258956e-02,  1.68437163e-01, -4.29657395e-02,
        -2.36884376e-01,  6.35705788e-02, -1.57660505e-01,
         2.51794767e-01, -4.79333661e-02,  1.92885056e-01,
        -1.55381192e-01, -6.64814757e-02,  4.11884517e-02,
         2.50930752e-01,  1.63335162e-01,  1.35154939e-01,
        -2.55970952e-02,  6.49511510e-02, -1.21678290e-01,
         8.17942502e-02,  1.90504249e-02, -9.33899215e-02,
        -3.11941108e-02, -1.03241599e-01,  1.13351348e-01,
         1.58640544e-01, -2.25810232e-02,  2.06820358e-01,
        -9.48923274e-02, -1.77451367e-01,  3.36064173e-02,
        -8.26003848e-02,  1.52690570e-01, -1.10390692e-01,
         2.44903478e-01,  1.32747702e-01,  1.46639201e-01,
        -8.76929681e-02, -1.66624381e-01, -1.87572456e-01,
        -1.16080474e-01, -9.85881327e-02,  4.15699268e-02,
        -5.54529564e-02,  1.26478236e-01, -1.55216824e-01,
         1.94415572e-01, -3.90600664e-02, -1.11410638e-02,
        -2.27693353e-01, -1.87551445e-01, -2.69214150e-02,
         1.83264532e-01,  3.86223673e-04,  2.02618762e-01,
         1.23443848e-01, -3.26005330e-02,  2.31881981e-01,
         1.61215625e-01, -2.10633426e-01, -1.65534712e-01,
         7.20748490e-02, -9.96460015e-02, -1.02835031e-01,
         9.81431642e-02, -2.25535803e-01,  6.05260745e-02,
         1.29381724e-01,  6.69378306e-02,  1.36106422e-01,
        -6.97030547e-02,  2.12486731e-01, -1.86484362e-01,
        -2.11091665e-02, -8.41844035e-03, -1.88740965e-01,
        -3.57168678e-02,  2.70605783e-03,  5.00861256e-02,
         8.23582518e-02,  1.05631400e-01, -3.45855927e-03,
         5.33906787e-02, -1.75801360e-02,  1.92262094e-01,
         1.53176070e-02,  4.94604946e-02,  9.20858319e-02,
        -1.59686956e-01,  1.65303002e-01, -4.99233251e-02,
        -1.08530771e-01,  8.42336552e-02,  1.96634575e-03,
        -1.30382655e-01],
       [-4.40334527e-02, -9.08212256e-03,  1.56727322e-01,
        -9.16206281e-03, -6.42836470e-02,  4.18294027e-02,
        -1.28509812e-01, -2.24605086e-03, -2.40524148e-02,
         1.68111585e-01, -1.48330672e-01,  1.95810179e-01,
        -1.76815049e-01, -4.06749332e-02, -1.19884941e-01,
        -3.24397000e-02, -1.09950748e-01, -1.14281289e-01,
        -7.46480706e-02, -1.29989521e-01, -5.43811594e-02,
        -1.40699460e-01,  1.09085668e-01,  7.28436384e-02,
         1.07917721e-01, -1.83692911e-01,  1.35978698e-01,
         1.60574713e-01,  3.68725889e-02,  1.88152427e-01,
        -6.96306609e-04, -1.34211016e-01,  2.18315769e-01,
        -1.56019274e-01,  1.94486808e-02, -8.81496737e-02,
         3.36795060e-02,  1.65232437e-01,  1.48564910e-01,
        -1.15638521e-01, -1.06463424e-01, -1.44424874e-02,
        -8.23361208e-02, -1.67619750e-01,  7.57154576e-02,
         5.71782971e-02, -1.31114569e-01, -1.87832577e-01,
        -1.29338279e-01, -5.64425053e-02,  6.12146799e-03,
         1.66044745e-02, -1.41795194e-01, -4.17391702e-03,
         2.06182731e-02, -1.91284232e-01,  3.01628138e-02,
        -9.40462565e-02,  7.22015547e-02,  6.82190633e-02,
        -1.77065444e-01,  8.10167935e-02,  2.37947227e-01,
         2.80422791e-02,  3.75342832e-02,  9.82390761e-02,
        -5.94788814e-04, -1.86476288e-01,  1.78958414e-01,
        -3.28289976e-02,  1.94427585e-01, -1.07211175e-01,
        -2.16385557e-01,  1.96962456e-01,  5.25730188e-02,
         7.25652949e-02, -2.10034407e-02,  1.85825243e-01,
         9.43462634e-02,  1.19880571e-01,  7.70235197e-02,
         1.26103040e-01, -4.35981163e-02, -6.87160181e-02,
        -1.59157344e-01, -7.91760205e-02, -2.74542668e-02,
         1.31399691e-01, -1.14526728e-01,  2.44640610e-01,
        -6.00948446e-02, -4.78716493e-02, -7.91530798e-02,
         1.30728657e-01,  1.44064893e-01, -1.15527934e-01,
        -2.11946353e-01,  1.91425938e-01, -5.88393595e-02,
         2.04033729e-01],
       [ 1.63272098e-01, -1.56337819e-01,  1.28395770e-01,
        -1.89084321e-01, -1.98600098e-01, -2.47912854e-02,
        -7.71702589e-02,  9.91776336e-02, -2.10962119e-01,
         5.29949291e-02,  9.18441579e-02, -1.58877774e-01,
         1.87772306e-01, -1.35355842e-01,  1.70992218e-01,
        -6.13369744e-02,  1.71642665e-01,  1.47758057e-01,
         9.11811198e-02, -1.22147991e-01,  3.36697689e-02,
        -1.64024904e-01, -3.50363242e-02, -8.80277985e-02,
         1.78620811e-01, -9.58272608e-03, -1.04509895e-01,
         1.20001155e-01, -1.84209073e-02,  8.73523275e-02,
        -7.42552607e-02,  1.89702499e-01, -1.55687675e-01,
        -1.60731035e-01, -2.06951506e-01,  1.71092169e-01,
         2.37275709e-02, -1.01104293e-01,  2.49778412e-01,
         1.18912922e-01,  1.05477503e-01, -7.35975182e-02,
         1.14975146e-01,  9.34528165e-02, -1.05160906e-01,
        -2.41747950e-01, -1.51300438e-01,  7.79172108e-02,
        -1.69568549e-01,  1.25935238e-02, -1.16192370e-01,
         1.47501567e-02, -9.36349431e-02,  9.04295437e-02,
         2.86410206e-03,  1.33523892e-02,  5.31136659e-02,
        -3.75244619e-02, -5.43122678e-02, -1.17949320e-01,
         1.72885940e-01, -9.71046861e-02, -2.76448063e-02,
         8.77026889e-02, -1.48137193e-01,  9.98914015e-02,
         1.87695321e-01,  1.24196757e-02,  2.04789298e-01,
        -4.62189001e-02, -5.68102034e-02,  1.91258732e-01,
        -1.97267963e-01, -2.03004489e-01, -1.56588773e-01,
         1.85330530e-01, -9.93131866e-02,  1.81109341e-01,
        -1.97143463e-01,  2.07969627e-01,  1.65805949e-01,
         2.28631989e-01, -1.08687385e-01, -1.78945218e-01,
         4.42067539e-02,  1.44889629e-01,  5.42088528e-02,
        -1.48987264e-01, -1.00483612e-01,  3.42454420e-02,
        -8.79120346e-02, -1.87011099e-01, -1.48873036e-01,
         1.33232386e-01,  1.94061358e-01, -1.11494239e-01,
         1.37258612e-01, -1.48014984e-01, -1.11269926e-01,
        -6.18726486e-02]]), array([[ 0.05314402],
       [ 0.14877235],
       [-0.13846529],
       [ 0.03473455],
       [-0.09388857],
       [ 0.18037739],
       [ 0.01864504],
       [-0.1864003 ],
       [-0.17577322],
       [-0.11578432],
       [ 0.11908832],
       [-0.12553298],
       [ 0.0424511 ],
       [ 0.02704481],
       [ 0.00595175],
       [ 0.17374869],
       [ 0.13034173],
       [ 0.21912252],
       [ 0.13074444],
       [-0.17719299],
       [ 0.17521758],
       [-0.21642251],
       [-0.03064646],
       [-0.03740909],
       [ 0.14028902],
       [-0.02734828],
       [-0.16702194],
       [ 0.03366523],
       [ 0.13824412],
       [ 0.08036698],
       [-0.03697021],
       [ 0.0151997 ],
       [ 0.1715915 ],
       [ 0.1430794 ],
       [-0.11506397],
       [ 0.06297425],
       [-0.0195195 ],
       [ 0.09109687],
       [ 0.17535172],
       [ 0.22681183],
       [-0.06110918],
       [ 0.07776027],
       [-0.19884386],
       [ 0.21866837],
       [-0.03358919],
       [-0.14676836],
       [ 0.03761782],
       [ 0.11783249],
       [ 0.17822816],
       [ 0.16290227],
       [ 0.10371149],
       [-0.21118247],
       [ 0.13916285],
       [-0.01163368],
       [-0.20814807],
       [-0.00712513],
       [ 0.18586386],
       [-0.19034259],
       [ 0.04319031],
       [ 0.16956973],
       [-0.11735242],
       [-0.10984969],
       [ 0.21729695],
       [-0.00448897],
       [-0.03403896],
       [ 0.2134944 ],
       [ 0.02468283],
       [-0.13407978],
       [ 0.05656882],
       [-0.10516351],
       [-0.09450314],
       [ 0.08022043],
       [-0.06277613],
       [-0.15402963],
       [ 0.18615318],
       [-0.13208274],
       [-0.15001133],
       [-0.11607527],
       [ 0.17596999],
       [ 0.06722448],
       [-0.00096019],
       [ 0.10829954],
       [ 0.18086021],
       [ 0.10346043],
       [ 0.20005142],
       [ 0.07910343],
       [-0.15701894],
       [-0.0367233 ],
       [ 0.06076917],
       [ 0.0498858 ],
       [-0.02699786],
       [-0.12364041],
       [-0.11431822],
       [-0.17999792],
       [ 0.19493491],
       [-0.09589031],
       [-0.05592542],
       [ 0.0276273 ],
       [ 0.08396908],
       [ 0.16570859]])]
early_stopping: False
epsilon: 1e-08
fit: <bound method BaseMultilayerPerceptron.fit of MLPRegressor()>
get_metadata_routing: <bound method _MetadataRequester.get_metadata_routing of MLPRegressor()>
get_params: <bound method BaseEstimator.get_params of MLPRegressor()>
hidden_layer_sizes: (100,)
intercepts_: [array([-0.16032642,  0.00350305, -0.00857796, -0.05759921, -0.13803312,
       -0.09636745,  0.09223657, -0.00603487,  0.09201935,  0.05066885,
       -0.18271821,  0.16407515,  0.02614251, -0.03855216, -0.15748838,
        0.18439594,  0.03215893, -0.06599671,  0.2408701 ,  0.04321298,
        0.1881637 , -0.14596615,  0.1070965 ,  0.03222136, -0.10865842,
       -0.18385521,  0.18147297, -0.04625364, -0.05290584,  0.25314211,
        0.02974991,  0.18614818,  0.17108803, -0.1616044 ,  0.11993433,
        0.12503668,  0.09614537,  0.25224603,  0.26043679,  0.22313873,
        0.13061132,  0.04780399, -0.13415037, -0.04233114,  0.18097582,
        0.19780593,  0.22826122, -0.09426683, -0.2154452 ,  0.21007782,
        0.21199183,  0.11781243, -0.23625426,  0.1663009 , -0.1798148 ,
        0.00276726,  0.05208543, -0.02768478, -0.03297746, -0.11752766,
       -0.22907981,  0.11535402, -0.04057061, -0.1662778 , -0.00275659,
        0.08035739, -0.14554582, -0.07628627, -0.1784258 ,  0.00365555,
        0.11158086, -0.07298165, -0.07006308, -0.08048277,  0.01018697,
        0.07665346, -0.09129978, -0.02232163, -0.08302034, -0.09993939,
       -0.07272992, -0.09241084,  0.15813291, -0.04411599, -0.23717316,
        0.20189628, -0.09835805, -0.11531027, -0.19923039, -0.20365811,
        0.03784825,  0.19418095, -0.08898743,  0.00674282,  0.00518644,
       -0.15595082, -0.12788734, -0.05748104, -0.11642485, -0.06030229]), array([-0.17781047])]
learning_rate: constant
learning_rate_init: 0.001
loss: squared_error
loss_: 0.3406419148501613
loss_curve_: [1.175482378760958, 1.0990358333755004, 1.026640103353945, 0.9580208536278844, 0.8930886192057078, 0.8318909222909083, 0.7745694354711313, 0.722151860435892, 0.6733458780976747, 0.6286636566906215, 0.5876642927567591, 0.550104687681151, 0.5159423527659684, 0.4851515854005709, 0.4576821293211451, 0.43336153597280064, 0.4126008617143582, 0.3946597368657317, 0.3794098323115425, 0.3667161669223011, 0.3562711686329216, 0.3479011526143788, 0.34141986704937366, 0.33663055063636615, 0.3333296374603522, 0.3313363758322736, 0.33037135502860954, 0.33023698876437907, 0.33074293958322076, 0.3317099804340581, 0.33297403609883114, 0.3343872629531676, 0.3358247270458918, 0.33718190968517664, 0.33837755123312574, 0.33933757180762547, 0.340042600882131, 0.34047723592126206, 0.3406419148501613]
max_fun: 15000
max_iter: 200
momentum: 0.9
n_features_in_: 6
n_iter_: 39
n_iter_no_change: 10
n_layers_: 3
n_outputs_: 1
nesterovs_momentum: True
out_activation_: identity
partial_fit: <bound method MLPRegressor.partial_fit of MLPRegressor()>
power_t: 0.5
predict: <bound method MLPRegressor.predict of MLPRegressor()>
random_state: None
score: <bound method RegressorMixin.score of MLPRegressor()>
set_params: <bound method BaseEstimator.set_params of MLPRegressor()>
set_score_request: <function RequestMethod.__get__.<locals>.func at 0x16b266940>
shuffle: True
solver: adam
t_: 6552
tol: 0.0001
validation_fraction: 0.1
validation_scores_: None
verbose: False
warm_start: False
--------------------------------------------------