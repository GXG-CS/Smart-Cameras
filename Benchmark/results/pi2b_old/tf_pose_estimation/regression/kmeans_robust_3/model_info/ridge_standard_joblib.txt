_abc_impl: <_abc._abc_data object at 0x148f26280>
_build_request_for_signature: <bound method _MetadataRequester._build_request_for_signature of <class 'sklearn.linear_model._ridge.Ridge'>>
_check_feature_names: <bound method BaseEstimator._check_feature_names of Ridge()>
_check_n_features: <bound method BaseEstimator._check_n_features of Ridge()>
_decision_function: <bound method LinearModel._decision_function of Ridge()>
_estimator_type: regressor
_get_default_requests: <bound method _MetadataRequester._get_default_requests of <class 'sklearn.linear_model._ridge.Ridge'>>
_get_metadata_request: <bound method _MetadataRequester._get_metadata_request of Ridge()>
_get_param_names: <bound method BaseEstimator._get_param_names of <class 'sklearn.linear_model._ridge.Ridge'>>
_get_tags: <bound method BaseEstimator._get_tags of Ridge()>
_more_tags: <bound method MultiOutputMixin._more_tags of Ridge()>
_parameter_constraints: {'alpha': [<sklearn.utils._param_validation.Interval object at 0x148f29d30>, <class 'numpy.ndarray'>], 'fit_intercept': ['boolean'], 'copy_X': ['boolean'], 'max_iter': [<sklearn.utils._param_validation.Interval object at 0x148f29d60>, None], 'tol': [<sklearn.utils._param_validation.Interval object at 0x148f29df0>], 'solver': [<sklearn.utils._param_validation.StrOptions object at 0x148f29e80>], 'positive': ['boolean'], 'random_state': ['random_state']}
_repr_html_: <bound method BaseEstimator._repr_html_inner of Ridge()>
_repr_html_inner: <bound method BaseEstimator._repr_html_inner of Ridge()>
_repr_mimebundle_: <bound method BaseEstimator._repr_mimebundle_ of Ridge()>
_set_intercept: <bound method LinearModel._set_intercept of Ridge()>
_validate_data: <bound method BaseEstimator._validate_data of Ridge()>
_validate_params: <bound method BaseEstimator._validate_params of Ridge()>
alpha: 1.0
coef_: [-0.15586578 -0.43974428 -0.11513598  1.07754301 -0.096591    0.00432403]
copy_X: True
fit: <bound method Ridge.fit of Ridge()>
fit_intercept: True
get_metadata_routing: <bound method _MetadataRequester.get_metadata_routing of Ridge()>
get_params: <bound method BaseEstimator.get_params of Ridge()>
intercept_: 0.987136462920452
max_iter: None
n_features_in_: 6
n_iter_: None
positive: False
predict: <bound method LinearModel.predict of Ridge()>
random_state: None
score: <bound method RegressorMixin.score of Ridge()>
set_fit_request: <function RequestMethod.__get__.<locals>.func at 0x148f4c040>
set_params: <bound method BaseEstimator.set_params of Ridge()>
set_score_request: <function RequestMethod.__get__.<locals>.func at 0x148f4c040>
solver: auto
tol: 0.0001
--------------------------------------------------