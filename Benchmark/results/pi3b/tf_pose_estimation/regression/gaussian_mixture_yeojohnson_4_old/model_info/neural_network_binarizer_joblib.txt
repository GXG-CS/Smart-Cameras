_abc_impl: <_abc._abc_data object at 0x13f080f40>
_backprop: <bound method BaseMultilayerPerceptron._backprop of MLPRegressor()>
_build_request_for_signature: <bound method _MetadataRequester._build_request_for_signature of <class 'sklearn.neural_network._multilayer_perceptron.MLPRegressor'>>
_check_feature_names: <bound method BaseEstimator._check_feature_names of MLPRegressor()>
_check_n_features: <bound method BaseEstimator._check_n_features of MLPRegressor()>
_check_solver: <bound method BaseMultilayerPerceptron._check_solver of MLPRegressor()>
_compute_loss_grad: <bound method BaseMultilayerPerceptron._compute_loss_grad of MLPRegressor()>
_estimator_type: regressor
_fit: <bound method BaseMultilayerPerceptron._fit of MLPRegressor()>
_fit_lbfgs: <bound method BaseMultilayerPerceptron._fit_lbfgs of MLPRegressor()>
_fit_stochastic: <bound method BaseMultilayerPerceptron._fit_stochastic of MLPRegressor()>
_forward_pass: <bound method BaseMultilayerPerceptron._forward_pass of MLPRegressor()>
_forward_pass_fast: <bound method BaseMultilayerPerceptron._forward_pass_fast of MLPRegressor()>
_get_default_requests: <bound method _MetadataRequester._get_default_requests of <class 'sklearn.neural_network._multilayer_perceptron.MLPRegressor'>>
_get_metadata_request: <bound method _MetadataRequester._get_metadata_request of MLPRegressor()>
_get_param_names: <bound method BaseEstimator._get_param_names of <class 'sklearn.neural_network._multilayer_perceptron.MLPRegressor'>>
_get_tags: <bound method BaseEstimator._get_tags of MLPRegressor()>
_init_coef: <bound method BaseMultilayerPerceptron._init_coef of MLPRegressor()>
_initialize: <bound method BaseMultilayerPerceptron._initialize of MLPRegressor()>
_loss_grad_lbfgs: <bound method BaseMultilayerPerceptron._loss_grad_lbfgs of MLPRegressor()>
_more_tags: <bound method RegressorMixin._more_tags of MLPRegressor()>
_no_improvement_count: 11
_optimizer: <sklearn.neural_network._stochastic_optimizers.AdamOptimizer object at 0x13f092640>
_parameter_constraints: {'hidden_layer_sizes': ['array-like', <sklearn.utils._param_validation.Interval object at 0x1392bfdf0>], 'activation': [<sklearn.utils._param_validation.StrOptions object at 0x1392bfe20>], 'solver': [<sklearn.utils._param_validation.StrOptions object at 0x13f0761f0>], 'alpha': [<sklearn.utils._param_validation.Interval object at 0x13f076700>], 'batch_size': [<sklearn.utils._param_validation.StrOptions object at 0x13f076730>, <sklearn.utils._param_validation.Interval object at 0x13f0767c0>], 'learning_rate': [<sklearn.utils._param_validation.StrOptions object at 0x13f0767f0>], 'learning_rate_init': [<sklearn.utils._param_validation.Interval object at 0x13f076880>], 'power_t': [<sklearn.utils._param_validation.Interval object at 0x13f0768b0>], 'max_iter': [<sklearn.utils._param_validation.Interval object at 0x13f076910>], 'shuffle': ['boolean'], 'random_state': ['random_state'], 'tol': [<sklearn.utils._param_validation.Interval object at 0x13f076970>], 'verbose': ['verbose'], 'warm_start': ['boolean'], 'momentum': [<sklearn.utils._param_validation.Interval object at 0x13f0769d0>], 'nesterovs_momentum': ['boolean'], 'early_stopping': ['boolean'], 'validation_fraction': [<sklearn.utils._param_validation.Interval object at 0x13f076a30>], 'beta_1': [<sklearn.utils._param_validation.Interval object at 0x13f076a90>], 'beta_2': [<sklearn.utils._param_validation.Interval object at 0x13f076af0>], 'epsilon': [<sklearn.utils._param_validation.Interval object at 0x13f076b50>], 'n_iter_no_change': [<sklearn.utils._param_validation.Interval object at 0x13f076bb0>, <sklearn.utils._param_validation.Options object at 0x13f076c10>], 'max_fun': [<sklearn.utils._param_validation.Interval object at 0x13f076ca0>]}
_predict: <bound method MLPRegressor._predict of MLPRegressor()>
_random_state: RandomState(MT19937)
_repr_html_: <bound method BaseEstimator._repr_html_inner of MLPRegressor()>
_repr_html_inner: <bound method BaseEstimator._repr_html_inner of MLPRegressor()>
_repr_mimebundle_: <bound method BaseEstimator._repr_mimebundle_ of MLPRegressor()>
_score: <bound method MLPRegressor._score of MLPRegressor()>
_unpack: <bound method BaseMultilayerPerceptron._unpack of MLPRegressor()>
_update_no_improvement_count: <bound method BaseMultilayerPerceptron._update_no_improvement_count of MLPRegressor()>
_validate_data: <bound method BaseEstimator._validate_data of MLPRegressor()>
_validate_input: <bound method MLPRegressor._validate_input of MLPRegressor()>
_validate_params: <bound method BaseEstimator._validate_params of MLPRegressor()>
activation: relu
alpha: 0.0001
batch_size: auto
best_loss_: 0.10026684341856913
best_validation_score_: None
beta_1: 0.9
beta_2: 0.999
coefs_: [array([[-1.09664140e-02, -1.09845212e-02,  5.61686873e-02,
        -1.73745712e-01,  1.11289805e-02,  2.42790343e-01,
        -1.66296385e-01, -6.04701108e-02, -1.59834997e-02,
        -8.04239586e-06,  7.14833006e-04, -1.07483153e-02,
         9.97819710e-02, -6.99306023e-02,  1.00231602e-01,
         3.57738897e-03, -1.17204475e-01,  1.23643430e-01,
         1.88875058e-01, -6.73098546e-02, -2.14632886e-02,
         1.46906173e-01, -3.37430862e-02,  4.36057678e-04,
        -4.42333690e-02, -8.29934514e-02,  2.70614156e-01,
         3.86899675e-04, -2.56664995e-02, -1.33581894e-01,
         1.97770642e-01,  6.84576867e-02, -1.52657679e-01,
         7.89577203e-04,  7.52550979e-02, -1.64055117e-01,
        -3.03636062e-02,  1.79180920e-01,  7.80969221e-02,
        -2.29208412e-02,  2.43371542e-01, -2.21683708e-01,
        -3.54787269e-02, -1.24852035e-03,  1.32410061e-01,
        -8.51734039e-02, -6.66344408e-02,  2.26088038e-02,
         6.27175062e-02, -7.67288122e-03, -7.10053739e-02,
        -8.74731162e-02,  2.52069777e-01,  2.06064472e-02,
         8.45843219e-02, -7.29502888e-02,  2.06278722e-01,
        -8.13212482e-02, -5.21331847e-02,  2.68378975e-01,
         1.25828961e-01,  7.39170258e-02, -5.32735280e-02,
        -3.43134301e-02, -9.65203776e-02,  1.03963379e-01,
         1.29963044e-01,  3.83314970e-02, -1.59431365e-01,
        -6.35771678e-03,  6.73068459e-02,  1.83342896e-01,
        -3.71422843e-02, -1.72886734e-02, -5.82274798e-02,
        -5.58367649e-02,  3.28198038e-02, -4.64192306e-02,
        -1.72036659e-02,  5.01945800e-02, -5.01471383e-04,
         1.40135196e-01, -7.60324516e-02,  4.73010100e-02,
         2.05350386e-01, -1.62185636e-02,  5.92049018e-02,
         6.76266752e-02, -2.30003650e-02, -1.96762083e-02,
        -1.05938376e-01,  2.60726889e-02, -7.17223949e-02,
         9.46562093e-02,  5.95780710e-02, -8.54129221e-02,
         1.54754051e-01,  3.27239530e-02, -9.20704842e-02,
        -1.26026336e-01],
       [-6.85350347e-02,  5.44068943e-02,  7.91776000e-03,
         2.24462101e-01, -9.90875913e-03, -9.83900276e-02,
        -8.77508570e-03,  2.49737890e-01, -1.28204275e-01,
         3.76341261e-02, -5.95503053e-02, -1.63814286e-03,
        -1.05071875e-01,  2.11243657e-02, -7.24710464e-02,
        -2.63051206e-02,  7.71644334e-03, -1.35349126e-02,
         2.18742868e-01,  5.84380699e-04, -7.89559956e-02,
         1.31510139e-02, -7.67219633e-02, -5.90454379e-02,
         8.11542750e-02, -7.72752538e-02,  4.96571000e-02,
         3.43081038e-03, -9.11434345e-02, -3.72020004e-02,
        -3.89400479e-02, -1.76370411e-01, -8.42161979e-02,
         5.47875087e-05,  9.24154852e-02, -1.22601236e-02,
         3.87984785e-02,  1.51032759e-01, -1.69366472e-02,
        -4.08569476e-03, -1.70572328e-01,  2.07430651e-02,
         1.39512065e-01,  5.63579398e-02,  1.20793950e-01,
        -5.76827866e-03, -4.90856187e-03,  2.30801294e-01,
         1.48812564e-01, -2.47202399e-02,  3.32047455e-05,
        -3.41876647e-02,  9.34269427e-02,  7.28688256e-02,
         2.57789820e-01, -6.26592689e-02,  1.63724808e-01,
         1.90311939e-01,  1.76353222e-01,  3.62726181e-02,
         3.05889070e-02,  4.49521781e-03, -1.03013731e-02,
         7.84153312e-02, -1.29001962e-01, -1.09263146e-01,
         2.30043589e-01, -2.27361260e-02, -1.64301745e-01,
         7.90013901e-04, -7.03349350e-02,  3.29957755e-02,
         7.30632130e-02, -1.31521885e-03,  4.79334269e-02,
         8.88802941e-02,  2.01884382e-01,  3.63423848e-03,
         1.44983067e-01,  1.55573559e-01, -8.13669465e-02,
         5.88739136e-02,  3.22371665e-02, -6.53408510e-02,
         5.44170735e-02,  2.91143958e-02, -2.28781160e-01,
         1.83038317e-01,  1.75950057e-01,  1.51076230e-02,
        -1.11720843e-02, -1.24262261e-01,  6.42124742e-02,
        -1.93171250e-01,  1.74592279e-01, -3.70480792e-02,
         1.15362723e-01,  1.32962451e-01,  8.41306526e-02,
        -1.31908134e-01],
       [ 2.30803187e-02,  1.06673326e-02, -1.94569068e-01,
         6.53339744e-02,  7.26347527e-02, -1.75645356e-01,
         2.04309319e-01,  2.86364357e-02, -4.48722902e-03,
        -2.27217688e-02,  1.58207938e-01, -1.50583463e-02,
        -1.28656800e-01, -6.80325625e-03, -1.71012490e-02,
        -1.39883460e-01,  1.90631003e-01,  2.35392757e-01,
         1.92985628e-01, -4.38005810e-03, -3.89662869e-03,
         4.67677660e-02, -2.51206542e-02,  2.47798886e-02,
        -2.67064574e-02,  2.56677689e-02, -1.40680118e-01,
        -4.09879999e-03,  2.06490506e-03,  1.29417121e-01,
         1.86830212e-01, -1.52513717e-02,  8.84868717e-02,
        -6.55409447e-02, -1.01185445e-01,  2.77393603e-01,
         1.92303927e-03,  1.09273870e-02,  1.13502921e-01,
         1.87589937e-02,  9.24232129e-02,  1.73880320e-01,
         1.04829281e-01, -1.74524476e-02, -6.30385881e-03,
         1.22794699e-02,  1.76791267e-01,  1.44523759e-01,
        -1.27534643e-01,  1.15924126e-01,  7.19095286e-02,
         7.04792779e-02,  2.70247611e-01, -4.01536376e-02,
         2.74087753e-01,  1.85797900e-03,  3.20722314e-02,
        -1.42349641e-01,  2.10535480e-01,  1.71829119e-01,
         1.55616170e-01, -9.01331374e-02,  8.69389282e-02,
         1.12043173e-01, -1.56980322e-01, -1.84819095e-01,
         8.36936937e-03,  7.23141944e-02,  7.49172751e-02,
        -2.20798004e-02, -1.43838513e-02, -4.61310803e-02,
         5.13903517e-04,  4.58639432e-02,  1.17420635e-01,
        -2.63168235e-01, -1.83069501e-01, -1.81452344e-02,
         2.07464029e-01,  1.60625744e-01,  7.25970282e-02,
        -2.41473506e-02,  9.26881393e-02, -6.82998885e-02,
        -1.37873170e-02,  2.09558321e-02, -4.08790963e-02,
        -2.17533483e-01,  6.75174871e-02, -6.63212125e-04,
         1.28030171e-01,  2.27772503e-02,  1.16706344e-01,
         2.04588852e-01,  1.33222187e-01, -1.76637248e-02,
         1.46406824e-01,  2.35138167e-02, -8.14710435e-02,
         1.43205230e-01],
       [ 3.50927895e-02, -6.08898575e-03, -9.72939528e-02,
         3.37720097e-01, -4.25229017e-06, -1.71862248e-01,
         3.75171959e-01, -1.23021973e-01,  2.78167452e-01,
         2.36159431e-02,  7.56409562e-02, -1.28005711e-02,
         5.23275367e-03, -7.75370847e-02, -3.32175709e-01,
        -5.98197908e-02, -4.81315634e-02, -1.20878833e-01,
        -3.13051672e-01, -6.32931967e-03, -3.11152173e-02,
        -1.14437856e-01, -8.62709418e-02, -5.11865877e-02,
         9.64212654e-03,  5.50219833e-03, -1.16224861e-01,
        -4.92656364e-02, -1.87909716e-03, -1.34757005e-01,
        -2.79195289e-01,  1.36413104e-01,  2.08043343e-01,
        -1.04128744e-02,  2.65868370e-02, -2.46796647e-01,
        -4.84388966e-02,  2.90111877e-01,  2.88552689e-01,
        -7.05265195e-02, -3.23670782e-01,  1.28080584e-01,
         1.16154998e-01, -8.58667248e-03,  7.26799550e-02,
         4.70236533e-02,  2.16930129e-01,  2.11473363e-02,
        -1.38867944e-01, -1.71379571e-01, -2.38503633e-02,
        -6.45276485e-03, -1.71644266e-01, -7.30224050e-02,
        -3.00901908e-01, -6.76700052e-02, -3.57730399e-01,
        -3.75777195e-02, -2.32179774e-01, -3.29134422e-02,
         1.67904516e-01, -6.20283657e-03,  2.22010861e-02,
        -5.00638181e-02,  9.72027268e-02,  1.93629954e-01,
         8.59965559e-02,  2.19433255e-02,  2.09149943e-01,
         4.27211219e-03, -2.05204998e-02,  1.85060891e-01,
         1.36415382e-02,  1.99846097e-02,  1.06537714e-01,
        -6.84053933e-02,  2.03969692e-01,  8.00905510e-02,
        -3.51723628e-01,  2.81042657e-01,  6.05762532e-02,
        -1.27855690e-01, -3.39832600e-01,  1.62792543e-02,
         1.67056773e-01, -7.52600597e-02, -1.50537332e-01,
         2.09869187e-01, -1.51782427e-01,  8.83293493e-03,
         1.71769792e-02,  6.64229929e-02, -1.14157757e-04,
        -2.45087665e-02,  6.56170347e-02, -6.63007647e-02,
         1.61465596e-02, -1.45195302e-01,  1.11412554e-02,
         1.20107819e-01],
       [ 3.14300313e-02, -8.38190490e-02,  2.62771042e-01,
        -2.30492883e-01, -6.21710475e-03,  1.48081864e-02,
        -7.69548919e-02, -1.58512394e-01, -7.87027616e-02,
        -1.22179730e-02,  1.83114171e-01,  4.12369963e-02,
         1.71117567e-01, -7.37502281e-02, -1.14534757e-01,
        -1.94767522e-01,  1.74693457e-01,  8.21489906e-02,
        -1.79643889e-01, -3.53796530e-02,  1.65194803e-02,
         9.74348452e-02, -2.15460601e-02, -1.33646665e-02,
        -4.68004232e-02,  5.60973522e-02,  2.04839108e-02,
        -5.10393955e-03,  1.42657299e-02,  2.09679680e-01,
         3.77708163e-02, -1.56023410e-02,  5.24334154e-03,
         2.56807707e-03, -1.73969231e-01, -2.76906516e-02,
        -8.27393801e-05,  1.74073661e-01, -1.69985389e-01,
        -2.47804135e-02,  1.30375104e-01,  1.47315735e-02,
         2.07515741e-01,  8.67670102e-02,  2.04467893e-01,
        -8.46535542e-02, -1.34970667e-01,  2.51763146e-01,
        -2.20539102e-02, -9.41352544e-03,  6.12128130e-03,
        -6.60989522e-02, -1.33902292e-01,  2.15542115e-01,
         2.29346411e-01, -2.01971229e-02,  2.58547125e-01,
         6.46541401e-02, -5.57123899e-03,  1.77740888e-01,
        -5.93757841e-02, -4.64331398e-02, -3.12449022e-05,
        -1.90668097e-01,  2.05527721e-01, -5.09479640e-02,
        -4.82565921e-02, -1.57004022e-02,  9.06546907e-02,
         1.19815407e-03, -5.49526842e-02,  2.04974548e-01,
        -2.65080295e-02,  2.32608495e-03, -2.93490525e-02,
         1.56545351e-01,  1.05766957e-01, -6.77983733e-02,
         1.80794216e-01, -9.66635596e-02, -1.69838912e-02,
        -1.52352993e-01,  2.14263464e-01, -3.70493121e-03,
        -9.13331454e-02, -4.30948448e-02, -1.02821220e-01,
        -5.49719769e-02,  2.67025605e-01,  3.56882880e-02,
         6.77297057e-02,  1.53058727e-01, -1.62660612e-01,
        -3.43910631e-03, -1.92707344e-02,  2.41321646e-02,
        -1.49313717e-02,  1.39165667e-01,  7.17324955e-02,
         9.47072699e-02],
       [-8.35173989e-02, -8.14057662e-02,  1.67201683e-01,
         2.92996210e-02, -7.28396660e-02,  2.40627474e-01,
        -1.05464011e-01, -4.84169323e-02, -1.23056039e-02,
        -3.53502263e-03, -2.49110577e-01,  1.16765779e-03,
         1.31048261e-01,  7.89774505e-04,  2.16008634e-01,
         1.40901117e-01,  2.26989547e-01,  1.06641833e-01,
         1.18547996e-01, -7.21811624e-02, -7.54372905e-02,
         9.82448184e-02,  6.00317409e-02, -4.15588937e-02,
         3.47358789e-03, -8.10595843e-03,  1.06457087e-01,
        -2.55560867e-04,  7.90430657e-02,  2.66419571e-01,
        -9.71637390e-02,  5.40615954e-02,  2.02392259e-01,
        -5.55874056e-02,  1.22015919e-01,  1.29481881e-01,
         1.39462959e-02,  4.86571923e-02,  9.38151872e-02,
        -5.70664747e-04,  1.68565772e-01, -2.45890932e-01,
        -1.19097430e-01, -8.81474039e-02, -1.22315800e-02,
         2.02937295e-03,  8.29904844e-02,  6.99267870e-02,
        -8.76349775e-02, -1.17235117e-01, -5.63029789e-03,
        -8.60989750e-02, -1.78946093e-01,  1.64572676e-01,
         1.24466971e-01, -4.31254030e-03, -9.21254932e-02,
        -1.64992751e-01,  9.86217257e-02,  2.04536846e-01,
        -2.62231184e-01, -8.89134266e-05, -2.01202347e-03,
         8.43465510e-02, -6.05485694e-02, -9.67089285e-02,
         1.46523737e-01, -9.40817296e-03, -8.36127091e-03,
        -3.50985914e-02, -2.68943197e-02,  1.51679633e-02,
         7.90996606e-03, -7.24437421e-02,  1.93830289e-01,
        -2.61116634e-02,  1.69399141e-01, -1.15145509e-01,
         1.28309904e-02, -1.44814951e-01, -8.15336263e-02,
        -1.41260224e-01,  2.42232764e-01, -1.13592858e-02,
        -5.88558538e-02, -1.58437351e-02,  1.12510293e-01,
        -2.33922092e-01,  1.00361720e-01, -5.90879956e-02,
        -5.36143885e-02,  1.14874462e-01, -1.22107298e-01,
         2.65132386e-01, -1.25147752e-01, -1.91064550e-02,
         3.94223995e-02,  3.50558584e-02, -1.59258752e-05,
         4.42406229e-02]]), array([[-5.85495836e-03],
       [-4.66467981e-02],
       [ 2.13708564e-01],
       [-2.97240557e-01],
       [ 4.56277491e-02],
       [ 2.16295878e-01],
       [-3.32574011e-01],
       [ 1.64484573e-01],
       [-2.97627112e-01],
       [-3.55430089e-02],
       [-5.62378072e-02],
       [-2.07005053e-05],
       [-2.95763509e-02],
       [-8.01682964e-02],
       [ 2.27707959e-01],
       [-1.74470213e-01],
       [ 1.49452252e-01],
       [ 2.22080299e-01],
       [ 1.16257937e-01],
       [ 8.52345075e-02],
       [-2.10025480e-02],
       [-7.75217297e-02],
       [-2.96672783e-02],
       [-1.73032037e-03],
       [ 7.20513879e-02],
       [-3.02582054e-02],
       [ 1.40118626e-01],
       [ 2.99072806e-02],
       [ 7.43975738e-02],
       [ 2.41538908e-01],
       [ 2.43935150e-01],
       [ 5.86578783e-03],
       [-5.11433697e-02],
       [ 4.91369530e-02],
       [-1.10789876e-01],
       [ 1.36242128e-01],
       [-4.56181155e-02],
       [-7.93861515e-02],
       [-1.84497739e-01],
       [-8.41800351e-05],
       [ 1.36837765e-01],
       [-1.96188801e-01],
       [ 8.15917726e-02],
       [ 4.64268379e-02],
       [ 1.44171945e-01],
       [-2.10091408e-02],
       [-1.63524105e-01],
       [ 3.26092395e-02],
       [-1.03044736e-01],
       [-7.32950765e-02],
       [ 4.05459087e-02],
       [ 2.30184618e-02],
       [ 1.85092183e-01],
       [ 2.51253064e-01],
       [ 1.28533962e-01],
       [ 8.20663026e-02],
       [ 1.65505395e-01],
       [-1.71470852e-01],
       [ 4.48177828e-02],
       [ 1.78284486e-01],
       [-1.67742004e-01],
       [ 6.36614451e-03],
       [-3.16740829e-04],
       [ 1.66058660e-01],
       [-1.32038966e-03],
       [-1.52254453e-01],
       [ 1.21858451e-01],
       [-4.00430607e-02],
       [ 2.71242575e-02],
       [ 1.00696116e-02],
       [ 5.47228112e-02],
       [-1.56116880e-01],
       [ 6.83339630e-02],
       [-3.24731243e-05],
       [ 1.90486010e-01],
       [-1.03397195e-01],
       [-1.22192505e-02],
       [ 5.67237164e-02],
       [ 1.36751155e-01],
       [-1.95507416e-01],
       [-8.46393317e-02],
       [-6.63218196e-02],
       [ 2.99729658e-01],
       [ 1.86069431e-02],
       [-3.59249930e-02],
       [ 2.37591636e-02],
       [-1.74958804e-01],
       [ 1.02230747e-01],
       [ 2.78583377e-01],
       [ 3.58801132e-02],
       [-8.78688535e-02],
       [ 3.78720364e-02],
       [-6.59794058e-02],
       [ 1.27532268e-01],
       [-1.67243679e-02],
       [ 1.76474045e-02],
       [-9.53896738e-02],
       [ 1.72160663e-01],
       [ 8.75145151e-02],
       [-2.03408497e-02]])]
early_stopping: False
epsilon: 1e-08
fit: <bound method BaseMultilayerPerceptron.fit of MLPRegressor()>
get_metadata_routing: <bound method _MetadataRequester.get_metadata_routing of MLPRegressor()>
get_params: <bound method BaseEstimator.get_params of MLPRegressor()>
hidden_layer_sizes: (100,)
intercepts_: [array([-0.07790088, -0.13820375,  0.12103266,  0.0848328 , -0.22468496,
        0.02718922,  0.15336828,  0.22413324,  0.24469065, -0.03774898,
        0.16878149, -0.0746247 , -0.21516808, -0.15151871,  0.30606653,
        0.17426483,  0.22799254,  0.03271321,  0.01241163,  0.12926716,
       -0.21937908, -0.01924264, -0.02863561, -0.05538992, -0.05857094,
        0.03467   ,  0.25348756, -0.11219545, -0.15038384,  0.04829491,
        0.05829956, -0.08719227,  0.14126173,  0.04053363,  0.11859127,
        0.25304769, -0.22995021,  0.1677529 ,  0.11286961,  0.01374663,
        0.26214531,  0.06913672,  0.21032136, -0.07992736,  0.19635099,
        0.00980855, -0.0519459 ,  0.23341378, -0.00300791,  0.01563464,
       -0.19050187, -0.02141728,  0.13861936, -0.13994719, -0.09582621,
       -0.09369187, -0.13211515,  0.0728687 , -0.1942232 ,  0.2140078 ,
        0.01992965,  0.00789195, -0.14734473,  0.22279181,  0.06683674,
        0.092088  , -0.09590991, -0.21980802, -0.10724156, -0.11642881,
       -0.10276078,  0.07320695, -0.19065247, -0.03176441,  0.07680693,
        0.04476662,  0.08124557,  0.09798267, -0.03675727,  0.14293264,
       -0.20651356,  0.08938586, -0.05816396, -0.20503161,  0.15080175,
       -0.12364085,  0.1564406 , -0.03827363, -0.10144683, -0.21929616,
        0.15032116, -0.02840928,  0.11989276,  0.18236974, -0.03121817,
       -0.19657599,  0.16756017,  0.20903946, -0.19465345,  0.06802599]), array([-0.17790576])]
learning_rate: constant
learning_rate_init: 0.001
loss: squared_error
loss_: 0.10026684341856913
loss_curve_: [1.1033280756935215, 0.9796532313639135, 0.8744044161516212, 0.7795013949440253, 0.6977617830369611,...
max_fun: 15000
max_iter: 200
momentum: 0.9
n_features_in_: 6
n_iter_: 120
n_iter_no_change: 10
n_layers_: 3
n_outputs_: 1
nesterovs_momentum: True
out_activation_: identity
partial_fit: <bound method MLPRegressor.partial_fit of MLPRegressor()>
power_t: 0.5
predict: <bound method MLPRegressor.predict of MLPRegressor()>
random_state: None
score: <bound method RegressorMixin.score of MLPRegressor()>
set_params: <bound method BaseEstimator.set_params of MLPRegressor()>
set_score_request: <function RequestMethod.__get__.<locals>.func at 0x13f08a940>
shuffle: True
solver: adam
t_: 45120
tol: 0.0001
validation_fraction: 0.1
validation_scores_: None
verbose: False
warm_start: False
--------------------------------------------------