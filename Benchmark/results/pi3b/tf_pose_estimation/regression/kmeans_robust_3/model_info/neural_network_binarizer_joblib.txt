_abc_impl: <_abc._abc_data object at 0x1360dfe40>
_backprop: <bound method BaseMultilayerPerceptron._backprop of MLPRegressor()>
_build_request_for_signature: <bound method _MetadataRequester._build_request_for_signature of <class 'sklearn.neural_network._multilayer_perceptron.MLPRegressor'>>
_check_feature_names: <bound method BaseEstimator._check_feature_names of MLPRegressor()>
_check_n_features: <bound method BaseEstimator._check_n_features of MLPRegressor()>
_check_solver: <bound method BaseMultilayerPerceptron._check_solver of MLPRegressor()>
_compute_loss_grad: <bound method BaseMultilayerPerceptron._compute_loss_grad of MLPRegressor()>
_estimator_type: regressor
_fit: <bound method BaseMultilayerPerceptron._fit of MLPRegressor()>
_fit_lbfgs: <bound method BaseMultilayerPerceptron._fit_lbfgs of MLPRegressor()>
_fit_stochastic: <bound method BaseMultilayerPerceptron._fit_stochastic of MLPRegressor()>
_forward_pass: <bound method BaseMultilayerPerceptron._forward_pass of MLPRegressor()>
_forward_pass_fast: <bound method BaseMultilayerPerceptron._forward_pass_fast of MLPRegressor()>
_get_default_requests: <bound method _MetadataRequester._get_default_requests of <class 'sklearn.neural_network._multilayer_perceptron.MLPRegressor'>>
_get_metadata_request: <bound method _MetadataRequester._get_metadata_request of MLPRegressor()>
_get_param_names: <bound method BaseEstimator._get_param_names of <class 'sklearn.neural_network._multilayer_perceptron.MLPRegressor'>>
_get_tags: <bound method BaseEstimator._get_tags of MLPRegressor()>
_init_coef: <bound method BaseMultilayerPerceptron._init_coef of MLPRegressor()>
_initialize: <bound method BaseMultilayerPerceptron._initialize of MLPRegressor()>
_loss_grad_lbfgs: <bound method BaseMultilayerPerceptron._loss_grad_lbfgs of MLPRegressor()>
_more_tags: <bound method RegressorMixin._more_tags of MLPRegressor()>
_no_improvement_count: 11
_optimizer: <sklearn.neural_network._stochastic_optimizers.AdamOptimizer object at 0x1360edf40>
_parameter_constraints: {'hidden_layer_sizes': ['array-like', <sklearn.utils._param_validation.Interval object at 0x13593bdf0>], 'activation': [<sklearn.utils._param_validation.StrOptions object at 0x13593be20>], 'solver': [<sklearn.utils._param_validation.StrOptions object at 0x1360d51f0>], 'alpha': [<sklearn.utils._param_validation.Interval object at 0x1360d5700>], 'batch_size': [<sklearn.utils._param_validation.StrOptions object at 0x1360d5730>, <sklearn.utils._param_validation.Interval object at 0x1360d57c0>], 'learning_rate': [<sklearn.utils._param_validation.StrOptions object at 0x1360d57f0>], 'learning_rate_init': [<sklearn.utils._param_validation.Interval object at 0x1360d5880>], 'power_t': [<sklearn.utils._param_validation.Interval object at 0x1360d58b0>], 'max_iter': [<sklearn.utils._param_validation.Interval object at 0x1360d5910>], 'shuffle': ['boolean'], 'random_state': ['random_state'], 'tol': [<sklearn.utils._param_validation.Interval object at 0x1360d5970>], 'verbose': ['verbose'], 'warm_start': ['boolean'], 'momentum': [<sklearn.utils._param_validation.Interval object at 0x1360d59d0>], 'nesterovs_momentum': ['boolean'], 'early_stopping': ['boolean'], 'validation_fraction': [<sklearn.utils._param_validation.Interval object at 0x1360d5a30>], 'beta_1': [<sklearn.utils._param_validation.Interval object at 0x1360d5a90>], 'beta_2': [<sklearn.utils._param_validation.Interval object at 0x1360d5af0>], 'epsilon': [<sklearn.utils._param_validation.Interval object at 0x1360d5b50>], 'n_iter_no_change': [<sklearn.utils._param_validation.Interval object at 0x1360d5bb0>, <sklearn.utils._param_validation.Options object at 0x1360d5c10>], 'max_fun': [<sklearn.utils._param_validation.Interval object at 0x1360d5ca0>]}
_predict: <bound method MLPRegressor._predict of MLPRegressor()>
_random_state: RandomState(MT19937)
_repr_html_: <bound method BaseEstimator._repr_html_inner of MLPRegressor()>
_repr_html_inner: <bound method BaseEstimator._repr_html_inner of MLPRegressor()>
_repr_mimebundle_: <bound method BaseEstimator._repr_mimebundle_ of MLPRegressor()>
_score: <bound method MLPRegressor._score of MLPRegressor()>
_unpack: <bound method BaseMultilayerPerceptron._unpack of MLPRegressor()>
_update_no_improvement_count: <bound method BaseMultilayerPerceptron._update_no_improvement_count of MLPRegressor()>
_validate_data: <bound method BaseEstimator._validate_data of MLPRegressor()>
_validate_input: <bound method MLPRegressor._validate_input of MLPRegressor()>
_validate_params: <bound method BaseEstimator._validate_params of MLPRegressor()>
activation: relu
alpha: 0.0001
batch_size: auto
best_loss_: 0.2001020338095298
best_validation_score_: None
beta_1: 0.9
beta_2: 0.999
coefs_: [array([[ 7.67043868e-02,  5.68208454e-02, -8.69519939e-03,
        -1.19868716e-01,  1.54049696e-01, -4.00236523e-02,
         1.12495676e-01, -2.96671083e-02,  6.17281243e-02,
        -1.19120365e-01,  1.00589360e-01, -9.93113597e-02,
        -7.86476783e-02, -3.18238042e-02, -2.76745309e-02,
         9.12246446e-02,  1.64990073e-02,  2.64899829e-01,
         1.83681704e-01,  3.60764536e-02,  1.54872474e-01,
         1.71695085e-01, -1.15285888e-02,  1.99554081e-01,
         1.81926670e-03, -5.98996057e-03, -4.05014162e-02,
         1.62769752e-02,  3.11434300e-02,  2.06208184e-01,
         3.58400112e-02,  1.03393900e-02,  1.84225724e-01,
        -2.36299179e-02,  2.65148390e-02, -1.56377405e-02,
        -1.44470371e-02, -1.29680093e-01,  1.64011265e-01,
         1.54386579e-01,  2.23428046e-01, -1.67261784e-01,
         1.58487201e-02,  5.56928679e-03,  1.77891149e-01,
        -3.96740466e-03, -3.74209909e-02, -6.45535513e-02,
         8.31901624e-02, -1.09747809e-01,  1.74173861e-01,
         1.88691013e-02,  5.35125511e-02,  1.87343449e-01,
        -3.92294166e-02,  8.05114675e-02, -9.83539600e-02,
        -3.29049901e-02, -1.25409654e-01,  1.86459426e-01,
         2.27342604e-02, -1.97066648e-02,  1.89396666e-01,
        -1.57255197e-01, -7.86573638e-02, -1.83294750e-01,
         2.07309140e-01,  9.36362795e-02,  1.52686932e-01,
        -1.78744984e-02, -6.63544126e-02,  2.05818043e-02,
         1.60542476e-01, -3.50493640e-02, -1.01374964e-03,
        -1.61080145e-02,  1.16762006e-02,  1.70809702e-01,
         9.86825898e-02, -1.62652302e-01, -3.02090634e-03,
        -2.68485644e-02,  4.20290579e-02,  2.09394187e-01,
        -7.05962542e-02,  1.84854471e-01,  1.81043372e-01,
         2.30540920e-01, -6.29742277e-02, -6.52385538e-02,
         2.39236650e-01,  1.13729909e-01, -1.03975115e-01,
        -1.42293389e-03,  1.90280036e-01,  5.10816327e-02,
        -1.62296548e-01,  5.41013937e-02,  5.51982626e-02,
         5.73577168e-02],
       [-9.65982985e-03, -6.58226661e-02,  1.29213472e-01,
         1.99455194e-01, -2.00637752e-01, -3.27394842e-02,
        -2.10592172e-02,  9.27035675e-02,  3.73189090e-02,
         4.57714699e-02,  2.40645044e-01, -5.46679713e-04,
        -3.28641100e-02, -1.79586349e-02, -3.34238116e-02,
        -1.68949387e-01, -1.00968616e-01, -2.80608258e-02,
         1.59064616e-01, -3.86401351e-02,  3.20207211e-03,
        -2.19619079e-01, -2.30008202e-02,  9.77894092e-02,
        -1.26097852e-01, -1.15037418e-01, -1.65190455e-04,
        -7.43395649e-03,  1.80309724e-01,  5.41548866e-02,
        -1.07687833e-01, -1.78838971e-02, -1.12744001e-01,
         3.31449724e-03, -7.89840137e-02, -2.34188051e-02,
         1.39341129e-01,  1.01892695e-01,  4.40275920e-02,
        -2.05912055e-01,  1.84857969e-01,  1.83528756e-01,
         4.82977329e-02,  1.96278419e-01, -6.56926705e-02,
        -7.03115856e-02,  7.13019883e-03,  1.18969341e-01,
        -7.13281711e-02, -5.43149087e-02, -2.06730434e-01,
        -1.86657368e-02,  1.54675495e-01, -7.63107707e-02,
         2.24712799e-01,  5.84839759e-02,  5.31712717e-02,
         3.49343885e-03,  4.73054842e-02, -1.10209620e-01,
         1.65348187e-02,  2.34768864e-02,  1.16663568e-01,
        -2.84438564e-02, -9.25500863e-02, -2.28650028e-01,
         2.02273082e-01, -1.09236121e-01, -1.34390192e-01,
        -5.01352736e-02, -5.00645226e-02,  1.78928626e-01,
        -2.30596289e-01,  1.44512402e-01, -7.04681291e-02,
         8.65253140e-02, -7.23335222e-03,  1.70850385e-01,
        -2.02696773e-01,  1.16813737e-01, -1.28591885e-01,
        -3.46429014e-02,  1.04254151e-01,  1.04753766e-01,
         1.53073712e-02, -8.06078881e-02, -1.47803183e-01,
         1.42683278e-01, -8.21701305e-02,  3.31770580e-02,
        -7.54429298e-02,  8.13138500e-02, -9.40854048e-02,
        -7.10810271e-02,  1.57404414e-01,  1.29479918e-01,
        -1.32536889e-02, -6.42336877e-02,  2.77642357e-02,
        -8.67379663e-02],
       [-6.65227754e-02, -4.29019746e-02,  2.19263213e-01,
         6.95677131e-02, -2.39337464e-01, -2.59623086e-02,
        -2.53772687e-02, -2.23529414e-02, -1.13432991e-01,
         2.35343252e-01,  1.06086372e-01, -2.16935874e-02,
        -1.23031423e-02, -3.18785076e-02,  4.86844226e-03,
         1.57424213e-01,  1.74826097e-02,  1.89353825e-01,
        -1.49100696e-01,  2.09439841e-01, -1.26770708e-01,
         1.03251216e-01, -1.53860395e-02,  1.01982545e-01,
         1.45821534e-02,  3.04412188e-03,  3.56930972e-02,
         2.11268881e-03,  1.08399350e-01,  7.06656746e-02,
        -7.95436254e-04,  7.52905597e-02,  2.03644788e-01,
         8.76697141e-02, -2.47107010e-02, -1.10450535e-02,
        -2.08393343e-02, -2.47204205e-02, -2.61758617e-01,
         1.98815947e-01,  1.40598094e-01,  1.19676733e-01,
        -4.07886894e-02, -1.09483596e-01, -2.15841295e-01,
         3.35981538e-02, -1.13895509e-01, -1.06157817e-02,
         9.06007363e-02,  8.88147261e-02,  7.61812289e-02,
         2.98181891e-03,  5.72993707e-02,  1.44231814e-01,
         1.77155261e-01, -1.75302228e-02, -8.87130839e-02,
        -3.64042572e-02, -1.11894293e-01,  2.08630489e-01,
         3.09209643e-02, -6.77168027e-02, -8.47617396e-02,
         8.48130709e-02, -9.91523132e-03,  2.14331684e-01,
        -1.73557810e-01, -1.14712909e-01,  7.62952753e-02,
         6.25983158e-02, -1.61775287e-02,  6.57825878e-02,
         2.27953744e-01,  1.87067021e-02, -9.56706870e-02,
         3.10276616e-02, -5.40889125e-02,  3.68503132e-02,
         1.78402688e-01,  1.02196852e-02, -6.61106398e-02,
        -9.18400456e-02, -1.10039366e-01, -1.13517100e-01,
        -1.47687979e-02,  1.47668100e-01, -1.28770165e-01,
         2.16597922e-02,  3.58350765e-03,  6.79349471e-02,
         2.07073107e-02,  5.18052303e-02, -7.95562584e-02,
        -7.11159413e-03,  1.38659081e-01,  2.23945590e-01,
        -2.65339707e-02,  6.80056091e-02, -4.44814795e-02,
         6.17051087e-02],
       [ 4.95501736e-02,  3.02929306e-01,  2.98032105e-01,
         2.98194544e-01,  1.81595610e-01,  1.30297319e-03,
         1.89497708e-01, -1.27908898e-01, -4.92449213e-02,
         1.35194523e-01,  2.92829751e-01, -1.21010145e-02,
        -1.06135758e-02, -8.07109381e-02,  1.16574598e-01,
         9.36559795e-02,  1.13988492e-01, -2.78824519e-01,
        -1.43011376e-01,  1.04956623e-01,  1.48588847e-01,
         6.06135774e-02, -3.65054352e-02,  3.00431012e-02,
        -3.88254897e-02, -1.19510693e-03, -6.65803116e-02,
        -3.00485669e-02,  2.60305658e-01, -1.01528331e-01,
         2.62252210e-02, -3.04396861e-02,  2.64626770e-01,
        -1.10325536e-01,  7.47184283e-03, -4.34756761e-02,
         1.98175295e-01,  9.12301203e-02, -1.17549197e-01,
         8.19010173e-02, -1.42581025e-01,  9.40620085e-02,
         1.48039093e-02, -2.24850225e-01, -1.87851054e-01,
        -7.59972862e-02,  1.54273965e-02, -3.45339822e-03,
         5.09195478e-02, -2.84916566e-02,  2.90057386e-01,
        -1.82854412e-02, -8.92692566e-02,  2.85005128e-01,
         1.78780575e-01, -3.27893883e-01,  4.13371200e-03,
        -2.50353759e-04,  1.30774643e-01, -9.25578100e-02,
        -2.41556020e-01, -2.27700820e-02,  1.01656277e-03,
         1.27011258e-01, -1.23716557e-01,  2.55389115e-01,
         1.94565431e-01, -1.14355673e-01, -3.75860049e-02,
        -4.07390237e-03, -1.08053182e-02, -3.31741295e-01,
         2.02482135e-01, -9.26647031e-02,  2.23026011e-01,
        -1.18233642e-01, -8.32111709e-02,  1.73260937e-02,
        -2.98925165e-02,  1.05396182e-01,  6.89303615e-02,
        -4.67891004e-02,  3.09692962e-01,  1.27154616e-01,
        -6.60585594e-02,  3.75997910e-03,  1.40284960e-01,
        -1.34951031e-01, -6.87860963e-02, -1.29193821e-01,
        -9.40019849e-02, -3.35692825e-02, -1.78532216e-02,
         1.25067713e-01, -2.75780402e-02, -6.57230063e-02,
        -3.49096811e-04,  2.28482157e-01, -8.98927516e-02,
         1.53300330e-01],
       [-7.32197398e-02,  2.52661434e-02,  2.40537142e-01,
         1.64974590e-01, -2.31646465e-01,  5.26609042e-03,
        -5.61235240e-02,  2.61609541e-02, -3.70651037e-02,
         1.89304804e-01, -1.23060222e-01, -3.63692391e-02,
        -6.56598142e-02,  1.13453473e-02, -1.59677936e-02,
         1.00264999e-01,  1.07181742e-01,  1.48731746e-02,
         2.28397474e-01,  9.88455678e-04,  2.00084485e-01,
         9.13181387e-02,  5.25422176e-02,  4.51821365e-03,
        -9.57239262e-02, -1.01871865e-01,  1.10856445e-02,
        -5.24360926e-02,  8.58668578e-02, -1.79512766e-01,
        -1.10226992e-01, -3.70344661e-03, -1.57349453e-01,
         1.96851509e-01,  2.47427276e-03,  1.54704964e-02,
         1.85243205e-02, -9.36432402e-02,  8.48299256e-02,
        -1.55904391e-01,  1.15427687e-01, -9.10160264e-02,
         1.95434244e-03, -7.00718477e-02,  2.27256242e-01,
         2.46152018e-02, -1.30602985e-02, -1.12854687e-01,
        -6.40129819e-02,  4.10301116e-02,  1.99214721e-01,
         1.25552148e-01,  1.88408224e-01,  1.02212414e-01,
        -1.55904699e-01,  5.28963892e-02, -1.61844769e-01,
        -3.58195005e-03, -1.18278336e-01,  2.92295049e-02,
        -1.07295503e-01,  5.75423506e-02,  1.92359854e-01,
         1.65259875e-01,  2.04249478e-02,  2.34818550e-01,
         1.17925246e-01,  1.10054383e-02,  1.08215213e-01,
        -2.45765608e-03, -1.55808154e-03, -1.00248818e-01,
         1.62246811e-01, -1.59296557e-01,  6.89749697e-02,
        -3.54207305e-02, -1.08726816e-01,  6.70048346e-02,
         7.00379333e-02,  1.11703083e-01,  2.64451090e-02,
        -6.43693279e-02, -5.01753843e-02,  1.24785138e-01,
        -1.05269472e-01, -1.01824828e-01,  1.46013620e-01,
         1.36689570e-02, -2.78141196e-02, -8.83379342e-02,
         8.69245969e-02,  4.23206987e-02, -7.78768220e-02,
        -1.21062578e-01,  2.04482406e-01,  1.78208732e-01,
         1.30768045e-01,  1.81644136e-01, -3.71477667e-03,
         1.02496748e-01],
       [-4.32186508e-02,  6.86072846e-02,  1.63767968e-01,
         1.52635726e-01,  1.85604436e-01, -8.25815233e-02,
        -4.41892441e-02, -7.10287423e-02, -4.99354723e-02,
         1.99227057e-01,  3.45056670e-04, -4.80263109e-02,
         2.98586333e-03, -9.06105754e-02, -1.16004436e-01,
         7.40165811e-02,  6.52996519e-02, -1.41895271e-02,
        -2.00375476e-01, -2.15655950e-02,  8.82233180e-02,
        -2.05793663e-01, -7.49050047e-02,  1.91992721e-01,
        -6.04787970e-02, -1.93624286e-02, -1.21052517e-01,
        -1.05834712e-01,  1.77737625e-01,  1.55105306e-01,
         3.17941013e-02, -9.41021168e-02,  1.08462717e-02,
         1.41280633e-01, -1.45550026e-02,  7.64360654e-02,
         4.69134673e-03, -1.12513612e-01, -4.45109382e-02,
         1.89240047e-01,  2.20528116e-01,  1.53592793e-01,
        -1.29640591e-01,  1.94341364e-01,  2.37627341e-01,
        -4.29067756e-02,  9.70723359e-02, -1.07335730e-01,
        -4.40843425e-02, -2.04608971e-02, -7.08699847e-02,
        -2.67853794e-02, -7.11077605e-02, -7.76078695e-02,
         1.91245331e-01, -3.25892470e-02,  1.67665849e-01,
         5.61313552e-02,  6.77200898e-02,  8.31338306e-02,
         2.50562213e-01,  4.56667669e-04, -5.47023722e-02,
        -2.30465724e-01,  9.42779884e-02, -1.19821106e-01,
         2.02614873e-01, -1.03651992e-03,  1.65628067e-01,
        -9.87821307e-04,  1.52820176e-02,  1.18000187e-01,
         5.22834353e-02, -1.71470907e-01, -1.06497777e-01,
        -2.87289876e-02, -5.50554806e-02,  1.79144478e-01,
        -2.05553203e-01, -2.04112211e-01, -1.75949728e-02,
         4.48752727e-02,  1.18316811e-01, -2.26734527e-01,
         2.72016072e-03,  3.22583773e-02,  6.05269598e-03,
         2.02647576e-01,  3.68355858e-03,  8.30943980e-02,
        -1.62874545e-01,  8.15289829e-02,  1.15764417e-01,
        -1.27661109e-01, -5.77087303e-02, -5.99404102e-03,
        -2.92876011e-02, -1.26730482e-01, -1.34601281e-03,
         9.52381789e-02]]), array([[ 3.38784492e-02],
       [ 2.58058660e-01],
       [ 2.18865870e-01],
       [ 1.49712999e-01],
       [-1.20666948e-01],
       [ 2.13681974e-02],
       [ 7.13015048e-03],
       [-3.59704785e-02],
       [-1.53807536e-02],
       [ 4.06775003e-02],
       [ 1.99917203e-01],
       [-1.32660612e-01],
       [-3.82909756e-04],
       [-5.31486491e-02],
       [ 1.21599964e-01],
       [ 1.34409038e-01],
       [-1.13142880e-01],
       [-1.81679065e-01],
       [ 1.52712492e-01],
       [ 1.05723225e-01],
       [-1.51765472e-01],
       [-1.54555112e-01],
       [-7.68296519e-03],
       [ 2.16115143e-02],
       [ 8.80636763e-02],
       [ 2.01382727e-02],
       [ 4.87520751e-03],
       [ 1.30918257e-03],
       [ 6.20683725e-02],
       [ 2.08766015e-01],
       [ 2.88940091e-03],
       [-3.97444163e-02],
       [ 1.34098615e-01],
       [-2.27778353e-02],
       [ 2.60238759e-02],
       [-4.71633763e-02],
       [ 2.79688699e-01],
       [-1.11522588e-01],
       [-7.78475666e-03],
       [ 1.95384823e-01],
       [-1.94070505e-01],
       [ 4.44016070e-02],
       [ 1.26784861e-01],
       [-2.75081374e-01],
       [-2.11198681e-02],
       [ 4.29008248e-02],
       [ 5.82845260e-03],
       [ 1.46121063e-04],
       [-3.07920503e-02],
       [-1.18989899e-03],
       [ 1.15453633e-01],
       [ 4.12290435e-02],
       [ 9.75320833e-02],
       [ 2.81316654e-01],
       [ 5.07715020e-02],
       [-1.08791524e-01],
       [-1.50996659e-01],
       [-9.33950861e-02],
       [ 1.19571549e-01],
       [ 1.49239428e-01],
       [-4.71542583e-02],
       [-2.30500192e-02],
       [ 1.33305161e-01],
       [-1.14564928e-01],
       [-1.00328790e-01],
       [ 2.49481536e-01],
       [ 1.99829978e-01],
       [-5.52997113e-03],
       [ 1.46839074e-01],
       [ 1.14326638e-01],
       [-1.04433317e-02],
       [-1.42737933e-01],
       [ 1.67313037e-01],
       [ 3.90620788e-02],
       [ 2.39311100e-01],
       [ 1.52347861e-03],
       [ 8.48205353e-03],
       [-2.20049261e-01],
       [ 6.65431090e-02],
       [ 2.69991597e-01],
       [-7.98934681e-05],
       [ 9.05733817e-04],
       [ 8.05126544e-02],
       [ 1.09336969e-01],
       [ 7.96660918e-03],
       [ 5.20642739e-03],
       [ 1.42063322e-01],
       [-4.71487403e-02],
       [ 4.15308549e-02],
       [-4.64290815e-04],
       [ 1.49180769e-01],
       [ 1.15891183e-01],
       [ 1.77971633e-02],
       [ 9.96802191e-02],
       [-9.21512112e-02],
       [-1.78681624e-01],
       [-8.79455140e-02],
       [ 9.46881171e-02],
       [ 4.18189356e-02],
       [-1.94233086e-02]])]
early_stopping: False
epsilon: 1e-08
fit: <bound method BaseMultilayerPerceptron.fit of MLPRegressor()>
get_metadata_routing: <bound method _MetadataRequester.get_metadata_routing of MLPRegressor()>
get_params: <bound method BaseEstimator.get_params of MLPRegressor()>
hidden_layer_sizes: (100,)
intercepts_: [array([-0.18713153, -0.03600205, -0.0633628 ,  0.2190575 ,  0.11554715,
        0.16690954,  0.19755526, -0.08131104,  0.07259096, -0.22823022,
       -0.04622261, -0.20205703,  0.10167578, -0.06783077,  0.05711216,
        0.02124076,  0.12638141, -0.10080207,  0.08943748,  0.12385018,
        0.07884969, -0.06304851, -0.12135695, -0.12989126,  0.0584146 ,
       -0.08052978,  0.03725252,  0.10647573,  0.17026827,  0.23434083,
       -0.03068763, -0.21620287,  0.07620616,  0.22399551,  0.05754955,
        0.02139555, -0.12602063, -0.20325492, -0.03229641,  0.05380617,
       -0.21407166,  0.04622307, -0.1888022 ,  0.07236501, -0.02609248,
       -0.103067  , -0.16925245, -0.12992656, -0.22735447, -0.17024835,
        0.12106401, -0.23573147, -0.12504885, -0.11171607,  0.20161233,
        0.27740036,  0.18985346, -0.20284093,  0.00911355, -0.04143382,
        0.19222913, -0.01283083,  0.10478973,  0.00139243, -0.22712773,
        0.08401535, -0.20258773, -0.16906994, -0.14741095, -0.15062198,
       -0.16846139,  0.13235906,  0.13431519,  0.14824775,  0.25319976,
       -0.10550479,  0.00149168, -0.10373591, -0.00919932,  0.15448837,
        0.06393946,  0.00954174, -0.10424394,  0.1307147 , -0.08605304,
       -0.23863187,  0.09716422,  0.14773263, -0.05618751, -0.23301695,
        0.15106137,  0.11719348,  0.17778567,  0.00334532, -0.05172538,
        0.06218073,  0.02263787,  0.07314263, -0.08105457, -0.09023067]), array([-0.07383792])]
learning_rate: constant
learning_rate_init: 0.001
loss: squared_error
loss_: 0.2001020338095298
loss_curve_: [0.4718448737425191, 0.4100438941350639, 0.3628658942665696, 0.32732327574441317, 0.3023854215003305, 0.28922893866204663, 0.28288665832716664, 0.282381500929726, 0.2826223886471971, 0.2822982453448874, 0.2799700696993922, 0.27547404579068885, 0.27050560515001243, 0.26436196205699775, 0.25952096040240064, 0.2560728503829566, 0.25428646017002776, 0.2517919087567274, 0.2501188707132655, 0.24824052417656212, 0.24589990210993012, 0.2434301075555714, 0.24106807509393352, 0.23869420396596158, 0.2364923639995839, 0.23469199116693604, 0.2329727002140955, 0.23138808358423074, 0.22979270677343827, 0.22802241926931052, 0.2263851204064063, 0.22491622671202008, 0.22322210368879897, 0.22193203581537507, 0.22060374638731606, 0.21938537342232445, 0.21793876398372009, 0.21689464292398952, 0.21580204723042107, 0.2145643875720125, 0.21338652546780582, 0.21214692936818563, 0.21114593018309122, 0.2099635793480467, 0.20900855826085596, 0.20802964024010637, 0.2073119875690342, 0.2064812153355603, 0.20582029008775873, 0.2052995646955347, 0.2048376431172248, 0.20440267316043503, 0.2039024832491481, 0.20358379270331126, 0.2031261215083772, 0.20286874083711434, 0.20252999964227072, 0.20226483752872781, 0.20218313282620495, 0.20175267932319885, 0.20156511347985817, 0.2013539351335429, 0.20116310831508166, 0.20105407796685912, 0.20092806382823475, 0.2007921152611946, 0.20069118975222122, 0.20060163291714508, 0.20051993370392251, 0.20047396650794116, 0.20047986363596168, 0.20071282787532374, 0.2002875888239839, 0.20036439240065299, 0.20022328343029955, 0.20027160141640213, 0.2001779787711137, 0.20015947060620556, 0.20015968497309555, 0.200176556545125, 0.2001251922069992, 0.2001300352180367, 0.2001162328455906, 0.2001020338095298]
max_fun: 15000
max_iter: 200
momentum: 0.9
n_features_in_: 6
n_iter_: 84
n_iter_no_change: 10
n_layers_: 3
n_outputs_: 1
nesterovs_momentum: True
out_activation_: identity
partial_fit: <bound method MLPRegressor.partial_fit of MLPRegressor()>
power_t: 0.5
predict: <bound method MLPRegressor.predict of MLPRegressor()>
random_state: None
score: <bound method RegressorMixin.score of MLPRegressor()>
set_params: <bound method BaseEstimator.set_params of MLPRegressor()>
set_score_request: <function RequestMethod.__get__.<locals>.func at 0x1360ea940>
shuffle: True
solver: adam
t_: 32592
tol: 0.0001
validation_fraction: 0.1
validation_scores_: None
verbose: False
warm_start: False
--------------------------------------------------